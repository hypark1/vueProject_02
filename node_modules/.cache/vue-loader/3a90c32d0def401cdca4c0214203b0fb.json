{"remainingRequest":"/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hypark/project/cdp-admin/src/views/contents/Report.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/hypark/project/cdp-admin/src/views/contents/Report.vue","mtime":1582009368203},{"path":"/Users/hypark/project/cdp-admin/node_modules/css-loader/dist/cjs.js","mtime":1573115876168},{"path":"/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1573437292219},{"path":"/Users/hypark/project/cdp-admin/node_modules/postcss-loader/src/index.js","mtime":1573115876260},{"path":"/Users/hypark/project/cdp-admin/node_modules/vuetify-loader/lib/loader.js","mtime":1573794163850},{"path":"/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js","mtime":1573115876135},{"path":"/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/index.js","mtime":1573437292219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojY29udGVudHNSZXBvcnQgLnJlc3VsdE1lZGlhIHRib2R5IHRyOm50aC1vZi10eXBlKG9kZCkgewogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjA1KTsKfQojY29udGVudHNSZXBvcnQgLnJlc3VsdFJlcG9ydCB0Ym9keSB0cjpmaXJzdC1jaGlsZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAuMDUpOwp9Cg=="},{"version":3,"sources":["Report.vue"],"names":[],"mappingsggBA;AACA;AACA;AACA;AACA;AACA","file":"Report.vue","sourceRoot":"src/views/contents","sourcesContent":["<template>\n  <v-container\n    id=\"contentsReport\"\n    fluid\n    tag=\"section\">\n    <v-row\n            align=\"center\"\n            justify=\"center\">\n      <v-col cols=\"12\">\n      <base-material-card\n              color=\"green\">\n        <template v-slot:heading>\n          <h1 class=\"display-2 font-weight-regular\">\n            {{contentsName}}\n          </h1>\n        </template>\n        <v-card-text>\n          <v-row justify=\"space-between\" align=\"center\" class=\"ma-0\">\n            <v-col cols=\"8\" class=\"pt-0\">\n              <h2 style=\"padding: 20px 10px;\">\n                {{contentsName}} 성과 분석\n              </h2>\n            </v-col>\n            <v-col cols=\"4\" class=\"pt-0\">\n            <v-row justify=\"end\" align=\"center\">\n              <v-col cols=\"4\">\n                <v-menu\n                        ref=\"menu1\"\n                        v-model=\"datePicker.start.menu\"\n                        :close-on-content-click=\"false\"\n                        :return-value.sync=\"datePicker.start.date\"\n                        transition=\"scale-transition\"\n                        min-width=\"290px\"\n                        offset-y >\n                  <template v-slot:activator=\"{ on }\">\n                    <v-text-field\n                            v-model=\"datePicker.start.date\"\n                            color=\"secondary\"\n                            label=\"Start date\"\n                            prepend-icon=\"mdi-calendar-outline\"\n                            readonly\n                            v-on=\"on\" />\n                  </template>\n\n                  <v-date-picker\n                          v-model=\"datePicker.start.date\"\n                          color=\"secondary\"\n                          landscape\n                          scrollable >\n                    <v-spacer />\n                    <v-btn\n                            color=\"secondary\"\n                            @click=\"datePicker.start.menu = false\" >\n                      Cancel\n                    </v-btn>\n\n                    <v-btn\n                            color=\"secondary\"\n                            @click=\"$refs.menu1.save(datePicker.start.date)\" >\n                      OK\n                    </v-btn>\n                  </v-date-picker>\n                </v-menu>\n              </v-col>\n              <span>-</span>\n              <v-col cols=\"4\">\n                <v-menu\n                        ref=\"menu2\"\n                        v-model=\"datePicker.end.menu\"\n                        :close-on-content-click=\"false\"\n                        :return-value.sync=\"datePicker.end.date\"\n                        transition=\"scale-transition\"\n                        min-width=\"290px\"\n                        offset-y >\n                  <template v-slot:activator=\"{ on }\">\n                    <v-text-field\n                            v-model=\"datePicker.end.date\"\n                            color=\"secondary\"\n                            label=\"End date\"\n                            prepend-icon=\"mdi-calendar-outline\"\n                            readonly\n                            v-on=\"on\" />\n                  </template>\n\n                  <v-date-picker\n                          v-model=\"datePicker.end.date\"\n                          color=\"secondary\"\n                          landscape\n                          scrollable >\n                    <v-spacer />\n                    <v-btn\n                            color=\"secondary\"\n                            @click=\"datePicker.end.menu = false\" >\n                      Cancel\n                    </v-btn>\n\n                    <v-btn\n                            color=\"secondary\"\n                            @click=\"$refs.menu2.save(datePicker.end.date)\" >\n                      OK\n                    </v-btn>\n                  </v-date-picker>\n                </v-menu>\n              </v-col>\n              <v-btn\n                      :disabled=\"!vModel.valid\"\n                      color=\"success\"\n                      default\n                      @click=\"submitDate\">\n                검색\n              </v-btn>\n            </v-row>\n            </v-col>\n          </v-row>\n          <p class=\"ml-5\">항목을 클릭하시면 그래프로 확인하실 수 있습니다.</p>\n          <base-material-tabs\n                  background-color=\"transparent\"\n                  fixed-tabs\n                  color=\"warning\"\n                  icons-and-text\n                  style=\"height:80px\">\n            <v-tab\n                    v-for=\"(tab, i) in config.lineCard\"\n                    :key=\"i\"\n                    :disabled=\"true\"\n                    style=\"height:80px;opacity: 1;\">\n              <h1 class=\"mb-0 font-weight-bold\">\n                  <template v-if=\"[1, 2].includes(i)\">{{timeSet(tab.value)}}</template>\n                  <template v-else-if=\"[4].includes(i)\">{{numReplace(tab.value)}}%</template>\n                  <template v-else-if=\"[5].includes(i)\">{{numReplace(tab.value)}}원</template>\n                  <template v-else>{{numReplace(tab.value)}}</template>\n              </h1>\n              <h3 class=\"mb-3 font-weight-bold\">{{tab.title}}</h3>\n            </v-tab>\n          </base-material-tabs>\n          <v-row>\n            <v-col cols=\"12\" style=\"height:400px;\" v-if=\"resultChart\">\n              <fusioncharts\n                :type='chartData.type'\n                :width='chartData.width'\n                :height='chartData.height'\n                :dataFormat='chartData.dataFormat'\n                :dataSource='chartData.dataSource'></fusioncharts>\n            </v-col>\n          </v-row>\n          <v-divider class=\"mt-5 mb-5\" />\n          <v-row justify=\"space-between\" align=\"center\" class=\"ma-0\">\n            <v-col cols=\"2\">\n              <v-select\n                      :items=\"config.orderbyOptions\"\n                      v-model=\"vModel.orderby\"\n                      label=\"정렬\"\n                      color=\"secondary\"\n                      @change=\"submitOrderby\"/>\n            </v-col>\n          </v-row>\n          <v-col v-if=\"resultMedia\" cols=\"12\" class=\"pa-0 ma-0\" style=\"border-top:1px solid rgba(0, 0, 0, 0.12)\">\n            <v-data-table\n                    class=\"resultMedia\"\n                    :headers=\"config.headersChart\"\n                    :items=\"resultMedia.list\"\n                    :items-per-page=\"5\"\n                    item-key=\"key\"\n                    no-data-text=\"리스트가 없습니다.\"\n                    hide-default-footer>\n                <template v-slot:item=\"{ item }\">\n                    <tr>\n                        <td class=\"text-center\" style=\"width:150px\">{{ item.media }}</td>\n                        <td class=\"text-right\" style=\"width:170px\">{{ numReplace(item.views) }}</td>\n                        <td class=\"text-right\" style=\"width:170px\">{{ timeSet(item.content_seconds) }}</td>\n                        <td class=\"text-right\" style=\"width:170px\">{{ timeSet(item.time) }}</td>\n                        <td class=\"text-right\" style=\"width:170px\">{{ numReplace(item.clicks) }}</td>\n                        <td class=\"text-right\" style=\"width:170px\">{{ numReplace(item.ctr) }}%</td>\n                        <td class=\"text-right\" style=\"width:170px\">{{ numReplace(item.ads_revenue) }}원</td>\n                    </tr>\n                </template>\n            </v-data-table>\n          </v-col>\n          <v-divider class=\"mt-5 mb-5\" />\n          <v-row justify=\"space-between\" align=\"center\" class=\"ma-0\">\n            <h2 style=\"padding: 20px 10px;\">\n              날짜별 리포트\n            </h2>\n              <v-btn color=\"warning\" :disabled=\"vModel.list\" @click=\"excelDownload()\">\n                  엑셀 다운로드\n              </v-btn>\n          </v-row>\n          <v-col v-if=\"resultList\" cols=\"12\" class=\"pa-0 ma-0\" style=\"border-top:1px solid rgba(0, 0, 0, 0.12)\">\n            <v-data-table\n                    class=\"resultReport\"\n                    :headers=\"config.headersReport\"\n                    :items=\"resultList.list\"\n                    :items-per-page=\"resultList.list.length\"\n                    item-key=\"key\"\n                    no-data-text=\"리스트가 없습니다.\"\n                    @click:row=\"tableRowClick\"\n                    hide-default-footer>\n                <template v-slot:item=\"{ item }\">\n                    <tr @click=\"tableRowClick(item)\">\n                        <td class=\"text-center\" style=\"width:150px\">{{ item.daily }}</td>\n                        <td class=\"text-right\" style=\"width:170px\">{{ numReplace(item.content_views) }}</td>\n                        <td class=\"text-right\" style=\"width:170px\">{{ timeSet(item.content_seconds) }}</td>\n                        <td class=\"text-right\" style=\"width:170px\">{{ timeSet(item.avg_content_seconds) }}</td>\n                        <td class=\"text-right\" style=\"width:170px\">{{ numReplace(item.ads_clicks) }}</td>\n                        <td class=\"text-right\" style=\"width:170px\">{{ numReplace(item.ctr) }}%</td>\n                        <td class=\"text-right\" style=\"width:170px\">{{ numReplace(item.rpm) }}원</td>\n                        <td class=\"text-right\" style=\"width:170px\">{{ numReplace(item.ads_revenue) }}원</td>\n                        <td class=\"text-right\" style=\"width:170px\">{{ numReplace(item.click_revenue) }}원</td>\n                    </tr>\n                </template>\n            </v-data-table>\n          </v-col>\n        </v-card-text>\n      </base-material-card>\n      </v-col>\n    </v-row>\n    <base-material-snackbar\n      v-model=\"vModel.snackbar\"\n      :type=\"vModel.snackbarType\"\n      v-bind=\"{\n        'top': true,\n        'right': true\n      }\">\n      <span style=\"display:block;width:300px;margin:0;\">{{vModel.errorMessage}}</span>\n    </base-material-snackbar>\n  </v-container>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\n\nexport default {\n  created () {\n    this.reFresh()\n  },\n  data () {\n    return {\n      response: {\n        contents: null,\n        contentsEdit: null,\n        exposure: null,\n        contentChart: null,\n        contentMedia: null,\n        contentList: null\n      },\n      vModel: {\n        lineTap: 0,\n        snackbar: false,\n        snackbarType: 'warning',\n        errorMessage: null,\n        fresh: false,\n        data: {},\n        contentsToggle: null,\n        valid: false,\n        orderby: '',\n        link: '',\n        list: true,\n      },\n      datePicker: {\n        start: {\n          date: '',\n          menu: false\n        },\n        end: {\n          date: '',\n          menu: false\n        }\n      },\n      config: {\n        lineCard: [],\n        orderbyOptions: [],\n        headersChart: [\n          { text: '매체명', value: 'media', align: 'center' },\n          { text: '페이지 뷰', value: 'views', align: 'center' },\n          { text: '체류 시간', value: 'content_seconds', align: 'center' },\n          { text: '평균 체류 시간', value: 'time', align: 'center' },\n          { text: '광고 클릭', value: 'clicks', align: 'center' },\n          { text: 'CTR', value: 'ctr', align: 'center' },\n          { text: '총 광고 매출', value: 'ads_revenue', align: 'center' },\n        ],\n        headersReport: [\n          { text: '날짜', value: 'date', align: 'center' },\n          { text: '페이지 뷰', value: 'page', align: 'center' },\n          { text: '체류 시간', value: 'time', align: 'center' },\n          { text: '평균 체류 시간', value: 'time2', align: 'center' },\n          { text: '광고 클릭', value: 'click', align: 'center' },\n          { text: 'CTR', value: 'ctr', align: 'center' },\n          { text: 'RPM', value: 'rpm', align: 'center' },\n          { text: '총 광고 매출', value: 'ad', align: 'center' },\n          { text: '클릭당 단가', value: 'click2', align: 'center' },\n        ],\n        chartData: {\n          type: 'stackedcolumn2dlinedy',\n          width: '100%',\n          height: '400',\n          dataFormat: 'json',\n          dataSource: {\n            chart: {\n              caption: '',\n              subcaption: '',\n              yaxisname: '매출',\n              syaxisname: '매출',\n              plottooltext: '$seriesName : $dataValue',\n              showhovereffect: '1',\n              setadaptiveymin: '1',\n              formatnumberscale: '0',\n              drawcrossline: '1',\n              theme: 'fusion'\n            },\n            categories: [ { category: [] } ],\n            dataset: [\n              { seriesname: '', data: [] },\n              {\n                seriesname: '매출',\n                parentyaxis: 'S',\n                plottooltext: '$seriesName : $dataValue',\n                renderas: 'line',\n                data: []\n              }\n            ]\n          }\n        },\n      },\n      chartData: {}\n    }\n  },\n  methods: {\n    ...mapActions(['xhttp']),\n    snack (type, val) {\n      this.vModel.errorMessage = val\n      this.vModel.snackbarType = type\n      this.vModel.snackbar = true\n    },\n    numReplace (val) {\n      let num = val + ''\n      num = num.split('.')\n      let result = num[0].replace(/\\D/g, '').replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n      if (num[1]) {\n        result += '.' + num[1]\n      }\n      return result\n    },\n    timeSet: function (val) {\n      val = Number(val)\n      let hour = parseInt(val / 3600) + ''\n      let min = parseInt((val % 3600) / 60) + ''\n      if (min.length === 1) {\n        min = 0 + min\n      }\n      let sec = val % 60 + ''\n      if (sec.length === 1) {\n        sec = 0 + sec\n      }\n      return this.numReplace(hour) + '시간 ' + min + '분 ' + sec + '초'\n    },\n    beforePage () {\n      this.$router.go(-1)\n    },\n    contentEdit () {\n      this.$router.push({ 'name': 'contentsEdit', params: { contents_id: this.$route.params.contents_id } })\n    },\n    submitDate () {\n      let start = this.datePicker.start.date\n      let end = this.datePicker.end.date\n      let startNum = Number(start.replace(/-/gi, ''))\n      let endNum = Number(end.replace(/-/gi, ''))\n      if (startNum > endNum) {\n        this.snack('warning', '시작일을 종료일보다 앞날짜로 선택하세요.')\n      } else {\n        this.$router.push({ 'name': 'contentsReport', query: { start: start, end: end, orderby: this.$route.query.orderby } })\n        this.reFresh()\n      }\n    },\n    excelDownload () {\n      let anchor = document.createElement('a')\n      document.body.appendChild(anchor)\n      let file = this.$store.state.baseURL + '/reports/content/daily/excel/' + this.$route.params.contents_id + '?sdate=' + this.datePicker.start.date + '&edate=' + this.datePicker.end.date\n      let headers = new Headers()\n      headers.append('Authorization', 'Bearer ' + JSON.parse(localStorage.getItem('cdpUser')).accessToken)\n      fetch(file, { headers })\n        .then(response => response.blob())\n        .then(blobby => {\n          let objectUrl = window.URL.createObjectURL(blobby)\n          anchor.href = objectUrl\n          anchor.download = this.datePicker.start.date + '_' + this.datePicker.end.date + '_ContentsReport_daily.xlsx'\n          anchor.click()\n          window.URL.revokeObjectURL(objectUrl)\n        })\n    },\n    reFresh () {\n      if (this.$route.query.start) {\n        this.datePicker.start.date = this.$route.query.start\n        this.datePicker.end.date = this.$route.query.end\n      } else {\n        this.datePicker.start.date = this.$moment(new Date()).add(-6, 'days').format('YYYY-MM-DD')\n        this.datePicker.end.date = this.$moment(new Date()).format('YYYY-MM-DD')\n      }\n      let send = {\n        sdate: this.datePicker.start.date,\n        edate: this.datePicker.end.date,\n      }\n      if (this.$route.query.orderby) {\n        this.vModel.orderby = this.$route.query.orderby\n        send.orderby = this.vModel.orderby\n      }\n      this.getContents()\n      this.getContentChart(send)\n    },\n    submitOrderby () {\n      let send = {\n        sdate: this.datePicker.start.date,\n        edate: this.datePicker.end.date,\n      }\n      send.orderby = this.vModel.orderby\n      this.$router.push({ 'name': 'contentsReport', query: { start: send.sdate, end: send.edate, orderby: send.orderby } })\n      this.getContentMedia(send)\n    },\n    tableRowClick (v) {\n      this.$router.push({ name: 'contentsReportHourly', params: { contents_id: this.$route.params.contents_id, date: v.daily } })\n    },\n    getContentChart (send) {\n      let id = this.$route.params.contents_id\n      this.xhttp({\n        url: '/reports/contents/' + id,\n        method: 'get',\n        params: send\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.contentChart = response.data.data\n          this.config.lineCard = this.response.contentChart.data.lineCard\n          if (this.response.contentChart.data.chart) {\n            let data = JSON.parse(JSON.stringify(this.config.chartData))\n            data.dataSource.chart.syaxisname = this.config.lineCard[0].title\n            data.dataSource.categories[0].category = this.response.contentChart.data.chart.label.reverse()\n            data.dataSource.dataset[0].data = this.response.contentChart.data.chart.revenue.reverse()\n            data.dataSource.dataset[0].seriesname = this.config.lineCard[5].title\n            data.dataSource.dataset[1].seriesname = this.config.lineCard[0].title\n            data.dataSource.dataset[1].data = this.response.contentChart.data.chart.view.reverse()\n            this.chartData = data\n          }\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    getContents () {\n      let id = this.$route.params.contents_id\n      this.xhttp({\n        url: '/contents/' + id,\n        method: 'get',\n        params: null\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.contents = response.data.data.contents\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n  },\n  computed: {\n    contentsName () {\n      if (this.response.contents) {\n        return this.response.contents.title\n      } else {\n        return ''\n      }\n    },\n    resultChart () {\n      if (this.response.contentChart) {\n        return this.response.contentChart\n      } else {\n        return ''\n      }\n    },\n    resultMedia () {\n      if (this.response.contentMedia) {\n        return this.response.contentMedia.data\n      } else {\n        return false\n      }\n    },\n    resultList () {\n      if (this.response.contentList) {\n        return this.response.contentList.data\n      } else {\n        return false\n      }\n    }\n  },\n  watch: {\n    datePicker: {\n      handler (val) {\n        if (val.start.date && val.end.date) {\n          this.vModel.valid = true\n        }\n      },\n      deep: true\n    }\n  }\n}\n</script>\n\n<style>\n  #contentsReport .resultMedia tbody tr:nth-of-type(odd) {\n    background-color: rgba(0, 0, 0, .05);\n  }\n  #contentsReport .resultReport tbody tr:first-child {\n    background-color: rgba(0, 0, 0, .05);\n  }\n</style>\n"]}]}