{"remainingRequest":"/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hypark/project/cdp-admin/src/views/contents/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hypark/project/cdp-admin/src/views/contents/Register.vue","mtime":1581916058165},{"path":"/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js","mtime":1573115876135},{"path":"/Users/hypark/project/cdp-admin/node_modules/babel-loader/lib/index.js","mtime":1573115869688},{"path":"/Users/hypark/project/cdp-admin/node_modules/vuetify-loader/lib/loader.js","mtime":1573794163850},{"path":"/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js","mtime":1573115876135},{"path":"/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/index.js","mtime":1573437292219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Register.vue","sourceRoot":"src/views/contents","sourcesContent":["<template>\n  <v-container\n    id=\"contentsRegister\"\n    fluid\n    tag=\"section\">\n    <v-row\n            align=\"center\"\n            justify=\"center\">\n      <v-col cols=\"12\">\n      <base-material-card\n              color=\"green\">\n        <template v-slot:heading>\n          <h1 class=\"display-2 font-weight-regular\">\n            컨텐츠 {{resultType}}\n          </h1>\n        </template>\n        <v-card-text>\n          <v-form\n                  v-model=\"vModel.valid\"\n                  ref=\"form\">\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\">\n                  <v-col cols=\"6\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"2\" class=\"text-right grey--text\">\n                              컨텐츠 종류\n                          </v-col>\n                          <v-col v-if=\"resultType !== '수정'\">\n                              <v-select\n                                      :items=\"config.category1\"\n                                      v-model=\"vModel.data.type\"\n                                      label=\"선택\"\n                                      color=\"secondary\"\n                                      @change=\"changeType\"\n                                      :rules=\"config.typeRules\"\n                                      required />\n                          </v-col>\n                          <v-col v-else>\n                              <v-text-field\n                                      type=\"text\"\n                                      color=\"secondary\"\n                                      v-model=\"vModel.data.type\"\n                                      disabled/>\n                          </v-col>\n                      </v-row>\n                  </v-col>\n                  <v-col cols=\"6\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"2\" class=\"text-right grey--text\">\n                              카테고리\n                          </v-col>\n                          <v-col v-if=\"resultType !== '수정'\">\n                              <v-select\n                                      :items=\"config.category2\"\n                                      v-model=\"vModel.data.category\"\n                                      label=\"선택\"\n                                      color=\"secondary\"\n                                      :rules=\"config.categoryRules\"\n                                      :disabled=\"!vModel.data.type\"\n                                      required />\n                          </v-col>\n                          <v-col v-else>\n                              <v-text-field\n                                      type=\"text\"\n                                      color=\"secondary\"\n                                      v-model=\"vModel.data.category\"\n                                      disabled/>\n                          </v-col>\n                      </v-row>\n                  </v-col>\n              </v-row>\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\">\n                  <v-col cols=\"6\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"2\" class=\"text-right grey--text\">\n                              글쓴이\n                          </v-col>\n                          <v-col>\n                              <v-text-field\n                                      label=\"글쓴이\"\n                                      type=\"text\"\n                                      color=\"secondary\"\n                                      v-model=\"vModel.data.writer\"\n                                      :rules=\"config.writerRules\"\n                                      required />\n                          </v-col>\n                      </v-row>\n                  </v-col>\n                  <v-col cols=\"6\" class=\"pt-0 pb-0\" v-if=\"vModel.data.type !== 'Video'\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"2\" class=\"text-right grey--text\">\n                              썸네일\n                          </v-col>\n                          <v-col v-if=\"!vModel.data.thumbnail_url || response.routeName === 'contentsRegister'\">\n                                  <v-file-input v-model=\"thumbnail_url\" label=\"파일 첨부\"></v-file-input>\n                          </v-col>\n                          <template v-else>\n                              <v-col cols=\"9\">\n                              <v-text-field\n                                      label=\"파일 첨부\"\n                                      type=\"text\"\n                                      color=\"secondary\"\n                                      v-model=\"vModel.data.thumbnail_url\"\n                                      disabled/>\n                              </v-col>\n                              <div @click=\"thumbnailClose()\" style=\"cursor: pointer;\">X</div>\n                          </template>\n                      </v-row>\n                  </v-col>\n              </v-row>\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\" v-if=\"vModel.data.type !== 'Video'\">\n                  <v-col cols=\"12\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"1\" class=\"text-right grey--text\">\n                              제목\n                          </v-col>\n                          <v-col>\n                              <v-text-field\n                                      label=\"제목\"\n                                      type=\"text\"\n                                      color=\"secondary\"\n                                      v-model=\"vModel.data.title\"\n                                      :rules=\"config.titleRules\"\n                                      required/>\n                          </v-col>\n                      </v-row>\n                  </v-col>\n              </v-row>\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\" v-if=\"vModel.data.type !== 'Video'\">\n                  <v-col cols=\"12\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"1\" class=\"text-right grey--text\">\n                              요약 내용\n                          </v-col>\n                          <v-col>\n                              <v-textarea\n                                      label=\"요약 내용\"\n                                      color=\"secondary\"\n                                      auto-grow\n                                      rows=\"1\"\n                                      row-height=\"5\"\n                                      no-resize\n                                      v-model=\"vModel.data.sub_title\"\n                                      :rules=\"config.subTitleRules\"\n                                      required />\n                          </v-col>\n                      </v-row>\n                  </v-col>\n              </v-row>\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\" v-if=\"vModel.data.type === 'Video'\">\n                  <v-col cols=\"12\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"1\" class=\"text-right grey--text\">\n                              URL\n                          </v-col>\n                          <v-col>\n                              <v-text-field\n                                      label=\"URL 주소\"\n                                      type=\"text\"\n                                      color=\"secondary\"\n                                      v-model=\"vModel.data.contents\"\n                                      :rules=\"config.urlRules\"\n                                      required/>\n                          </v-col>\n                      </v-row>\n                  </v-col>\n              </v-row>\n            <v-row justify=\"space-around\" v-if=\"vModel.data.type !== 'Video'\">\n              <v-col cols=\"12\">\n                  <vue-editor id=\"editor\"\n                              v-model=\"vModel.data.contents\"\n                              :editorToolbar=\"customToolbar\"\n                              useCustomImageHandler\n                              @image-added=\"handleImageAdded\"></vue-editor>\n              </v-col>\n            </v-row>\n            <v-row justify=\"center\"\n                   class=\"mt-5\">\n              <v-btn\n                      color=\"default\"\n                      @click=\"beforePage()\">\n                취소\n              </v-btn>\n              <v-btn\n                      :disabled=\"!vModel.valid\"\n                      color=\"success\"\n                      @click=\"submitRegister(resultType)\">\n                {{resultType}}\n              </v-btn>\n            </v-row>\n          </v-form>\n        </v-card-text>\n      </base-material-card>\n      </v-col>\n    </v-row>\n    <base-material-snackbar\n      v-model=\"vModel.snackbar\"\n      :type=\"vModel.snackbarType\"\n      v-bind=\"{\n        'top': true,\n        'right': true\n      }\">\n      <span style=\"display:block;width:300px;margin:0;\">{{vModel.errorMessage}}</span>\n    </base-material-snackbar>\n  </v-container>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport { VueEditor } from 'vue2-editor'\n\nexport default {\n  components: {\n    VueEditor\n  },\n  created () {\n    this.refresh()\n  },\n  data () {\n    return {\n      customToolbar: [\n        [{ 'font': [] }],\n        [{ 'header': [ false, 1, 2, 3, 4, 5, 6, ] }],\n        // [{ 'size': ['small', false, 'large', 'huge'] }],\n        ['bold', 'italic', 'underline', 'strike'],\n        [{ 'align': '' }, { 'align': 'center' }, { 'align': 'right' }, { 'align': 'justify' }],\n        [{ 'header': 1 }, { 'header': 2 }],\n        ['blockquote', 'code-block'],\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'list': 'check' }],\n        [{ 'script': 'sub' }, { 'script': 'super' }],\n        [{ 'indent': '-1' }, { 'indent': '+1' }],\n        [{ 'color': [] }, { 'background': [] }],\n        ['link', 'image'],\n        // ['link', 'image', 'video', 'formula'],\n        [{ 'direction': 'rtl' }],\n        // ['clean'],\n      ],\n      response: {\n        routeName: this.$route.name,\n        category: null,\n        category2: {},\n        category3: null,\n        contents: null,\n        partner: null,\n        register: null,\n        edit: null,\n        thumbnailVal: true,\n        image: [],\n      },\n      vModel: {\n        valid: true,\n        lineTap: 0,\n        snackbar: false,\n        snackbarType: 'warning',\n        errorMessage: null,\n        fresh: false,\n        created: this.$moment(new Date()).format('YYYY-MM-DD'),\n        contents: null,\n        data: {\n          title: null,\n          sub_title: null,\n          writer: null,\n          type: null,\n          category: null,\n          contents: null,\n          partner: null,\n          thumbnail_url: null,\n        },\n      },\n      thumbnail_url: null,\n      config: {\n        category1: [],\n        category2: [],\n        category3: [],\n        partner: [],\n        titleRules: [ v => !!v || '제목을 입력하세요.' ],\n        subTitleRules: [ v => !!v || '요약 내용을 입력하세요.' ],\n        writerRules: [ v => !!v || '글쓴이를 입력하세요.' ],\n        typeRules: [ v => !!v || '컨텐츠 종류를 선택하세요.' ],\n        categoryRules: [ v => !!v || '카테고리를 선택하세요.' ],\n        partnerRules: [ v => !!v || 'CP를 선택하세요.' ],\n        urlRules: [ v => !!v || 'url을 입력하세요.' ],\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['xhttp']),\n    snack (type, val) {\n      this.vModel.errorMessage = val\n      this.vModel.snackbarType = type\n      this.vModel.snackbar = true\n    },\n    beforePage () {\n      this.$router.go(-1)\n    },\n    refresh () {\n      this.getCategories()\n      this.getPartners()\n    },\n    changeType (val) {\n      this.vModel.data.category = null\n      this.config.category2 = this.response.category2[val]\n    },\n    thumbnailClose () {\n      this.vModel.data.thumbnail_url = null\n      this.response.thumbnailVal = true\n    },\n    tagChange (val) {\n      let text = this.vModel.data.contents\n      let div = document.createElement('div')\n      div.innerHTML = text\n      let img = div.querySelectorAll('img')\n      let h5 = div.querySelectorAll('h5')\n      let arr = []\n      for (let j = 0; j < h5.length; j++) {\n        let a2 = h5[j].getAttribute('class')\n        if (a2.indexOf('figcaption') !== -1) {\n          let text2 = h5[j].innerText\n          arr.push(text2)\n          h5[j].remove()\n        }\n      }\n      for (let i = 0; i < img.length; i++) {\n        if (img[i].parentNode.getAttribute('href')) {\n          let a = img[i].parentNode.parentNode.outerHTML\n          let aaa = a.replace(/(<p)(.+?)(<\\s?\\/\\s?p>)/, '<figure$2</figure>')\n          div.querySelectorAll('img')[i].parentNode.parentNode.outerHTML = aaa\n          let b = div.querySelectorAll('img')[i].parentNode.parentNode.innerHTML\n          b += '<figcaption>' + arr[i] + '</figcaption>'\n          div.querySelectorAll('img')[i].parentNode.parentNode.innerHTML = b\n        } else {\n          let a = img[i].parentNode.outerHTML\n          let aaa = a.replace(/(<p)(.+?)(<\\s?\\/\\s?p>)/, '<figure$2</figure>')\n          div.querySelectorAll('img')[i].parentNode.outerHTML = aaa\n          let b = div.querySelectorAll('img')[i].parentNode.innerHTML\n          b += '<figcaption>' + arr[i] + '</figcaption>'\n          div.querySelectorAll('img')[i].parentNode.innerHTML = b\n        }\n      }\n      this.vModel.contents = div.innerHTML\n      this.ContentsValidate(val)\n    },\n    handleImageAdded (file, Editor, cursorLocation, resetUploader) {\n      // An example of using FormData\n      // NOTE: Your key could be different such as:\n      // formData.append('file', file)\n\n      let formData = new FormData()\n      formData.append('upload', file)\n      this.xhttp({\n        url: '/contents/file-upload',\n        method: 'post',\n        data: formData\n      }).then((response) => {\n        if (response.status === 200) {\n          let src = response.data.link\n          Editor.insertEmbed(cursorLocation, 'image', src)\n          let div = document.createElement('div')\n          div.innerHTML = document.querySelector('.ql-editor').innerHTML\n          let img = div.querySelectorAll('img')\n          for (let i = 0; i < img.length; i++) {\n            if (img[i].src === 'http:' + src) {\n              let dd = div.querySelectorAll('img')[i].parentNode.innerHTML\n              dd += '<h5 class=\"figcaption\">Image Caption</h5>'\n              div.querySelectorAll('img')[i].parentNode.innerHTML = dd\n              document.querySelector('.ql-editor').innerHTML = div.querySelectorAll('img')[i].parentNode.parentNode.innerHTML\n            }\n          }\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    getCategories () {\n      this.xhttp({\n        url: '/categories',\n        method: 'get',\n        params: null\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.category = response.data.data.categories\n          this.config.category1 = this.response.category.map(function ($value) {\n            return { value: $value.name, text: $value.name }\n          })\n          this.config.category1 = this.config.category1.filter(function ($value) {\n            return $value.value !== 'Toon'\n          })\n          for (let i in this.response.category) {\n            this.response.category2[this.response.category[i].name] = this.response.category[i].children.map(function ($value) {\n              return { value: $value.id, text: $value.name }\n            })\n          }\n          if (this.response.routeName === 'contentsEdit') {\n            this.getContents()\n          }\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    ConvertHtml (str) {\n      str = str.replace(/&amp;/g, '&')\n      str = str.replace(/&lt;/g, '<')\n      str = str.replace(/&gt;/g, '>')\n      str = str.replace(/&quot;/g, '\"')\n      str = str.replace(/&#039;/g, \"'\")\n      str = str.replace(/&#39;/g, \"'\")\n      return str\n    },\n    getContents () {\n      this.xhttp({\n        url: '/contents/' + this.$route.params.contents_id + '/edit',\n        method: 'get',\n        params: null\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.contents = response.data.data.contents\n          this.vModel.data = this.response.contents\n          this.vModel.data.title = this.ConvertHtml(this.vModel.data.title)\n          if (this.vModel.data.sub_title) {\n            this.vModel.data.sub_title = this.ConvertHtml(this.vModel.data.sub_title)\n          }\n          this.vModel.data.created = this.vModel.data.created.slice(0, 10)\n          this.config.category2 = this.response.category2[this.vModel.data.type]\n          let num = this.vModel.data.category\n          let result = this.config.category2.filter(function ($value) {\n            return $value.value === num\n          })\n          this.vModel.data.category = result[0].text\n          if (this.vModel.data.thumbnail_url) {\n            this.response.thumbnailVal = false\n          }\n          let text = this.response.contents.contents\n          let div = document.createElement('div')\n          div.innerHTML = text\n          let img = div.querySelectorAll('img')\n          for (let i = 0; i < img.length; i++) {\n            if (img[i].parentNode.getAttribute('href')) {\n              let a = img[i].parentNode.parentNode.outerHTML\n              let aaa = a.replace(/(<figure)(.+?)(<\\s?\\/\\s?figure>)/, '<p$2</p>')\n              div.querySelectorAll('img')[i].parentNode.parentNode.outerHTML = aaa\n            } else {\n              let a = img[i].parentNode.outerHTML\n              let aaa = a.replace(/(<figure)(.+?)(<\\s?\\/\\s?figure>)/, '<p$2</p>')\n              div.querySelectorAll('img')[i].parentNode.outerHTML = aaa\n            }\n          }\n          let h5 = div.querySelectorAll('figcaption')\n          for (let i = 0; i < h5.length; i++) {\n            div.querySelectorAll('figcaption')[0].outerHTML = div.querySelectorAll('figcaption')[0].outerHTML.replace(/(<figcaption)(.+?)(<\\s?\\/\\s?figcaption>)/, '<h5 class=\"figcaption\"$2</h5>')\n          }\n          this.vModel.data.contents = div.innerHTML\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    getPartners () {\n      let send = {\n        orderby: 'created',\n        direction: 'desc'\n      }\n      this.xhttp({\n        url: '/partners',\n        method: 'get',\n        params: send\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.partner = response.data.data.partners[0].key\n          /* this.config.partner = this.response.partner.partners.map(function ($value) {\n            return { value: $value.key, text: $value.name }\n          }) */\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    submitRegister (val) {\n      if (this.$refs.form.validate()) {\n        if (this.vModel.data.thumbnail_url) {\n          let message = '등록 하시겠습니까?'\n          if (val === '수정') {\n            message = '수정 하시겠습니까?'\n          }\n          if (confirm(message)) {\n            this.tagChange(val)\n          }\n        } else {\n          this.snack('warning', '썸네일을 등록하세요.')\n        }\n      }\n    },\n    ContentsValidate (val) {\n      if (this.vModel.data.type === 'Video') {\n        if (val === '등록') {\n          this.putContents()\n        } else {\n          this.contentsEdit()\n        }\n      } else {\n        if (this.vModel.data.contents) {\n          if (val === '등록') {\n            this.putContents()\n          } else {\n            this.contentsEdit()\n          }\n        } else {\n          this.snack('warning', '내용을 입력하세요.')\n        }\n      }\n    },\n    putContents () {\n      let send = this.vModel.data\n      send.contents = this.vModel.contents\n      this.xhttp({\n        url: '/contents/' + this.response.partner + '/create',\n        method: 'post',\n        data: send\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.register = response.data.data\n          this.snack('success', '컨텐츠 등록이 완료되었습니다.')\n          this.$router.push({ name: 'contentsList' })\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    contentsEdit () {\n      let send = this.vModel.data\n      send.partner = this.response.partner\n      send.contents = this.vModel.contents\n      this.xhttp({\n        url: 'contents/' + this.response.partner + '/update/' + this.$route.params.contents_id,\n        method: 'put',\n        data: send\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.edit = response.data.data\n          this.snack('success', '수정 완료되었습니다.')\n          this.beforePage()\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    thumbnailFile () {\n      let formData = new FormData()\n      formData.append('upload', this.thumbnail_url)\n      this.xhttp({\n        url: '/contents/file-upload',\n        method: 'post',\n        data: formData\n      }).then((response) => {\n        if (response.status === 200) {\n          this.vModel.data.thumbnail_url = response.data.link\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n  },\n  computed: {\n    resultType () {\n      if (this.response.routeName === 'contentsEdit') {\n        return '수정'\n      } else {\n        return '등록'\n      }\n    }\n  },\n  watch: {\n    thumbnail_url: function (val) {\n      if (val) {\n        this.thumbnailFile()\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n    .v-application p {\n        margin-bottom: 10px;\n    }\n    #editor{\n       min-height:400px\n     }\n</style>\n"]}]}