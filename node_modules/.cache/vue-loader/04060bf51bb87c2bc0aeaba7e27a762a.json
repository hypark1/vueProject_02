{"remainingRequest":"/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hypark/project/cdp-admin/src/views/contents/Register2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hypark/project/cdp-admin/src/views/contents/Register2.vue","mtime":1580271750105},{"path":"/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js","mtime":1573115876135},{"path":"/Users/hypark/project/cdp-admin/node_modules/babel-loader/lib/index.js","mtime":1573115869688},{"path":"/Users/hypark/project/cdp-admin/node_modules/vuetify-loader/lib/loader.js","mtime":1573794163850},{"path":"/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js","mtime":1573115876135},{"path":"/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/index.js","mtime":1573437292219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Register2.vue"],"names":[],"mappingsfile":"Register2.vue","sourceRoot":"src/views/contents","sourcesContent":["<template>\n  <v-container\n    id=\"contentsRegister\"\n    fluid\n    tag=\"section\">\n    <v-row\n            align=\"center\"\n            justify=\"center\">\n      <v-col cols=\"12\">\n      <base-material-card\n              color=\"green\">\n        <template v-slot:heading>\n          <h1 class=\"display-2 font-weight-regular\">\n            컨텐츠 {{resultType}}\n          </h1>\n        </template>\n        <v-card-text>\n          <v-form\n                  v-model=\"vModel.valid\"\n                  ref=\"form\">\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\">\n                  <v-col cols=\"6\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"2\" class=\"text-right grey--text\">\n                              컨텐츠 종류\n                          </v-col>\n                          <v-col>\n                              <v-select\n                                      :items=\"config.category1\"\n                                      v-model=\"vModel.data.type\"\n                                      label=\"선택\"\n                                      color=\"secondary\"\n                                      @change=\"changeType\"\n                                      :rules=\"config.typeRules\"\n                                      :disabled=\"resultType === '수정'\"\n                                      required />\n                          </v-col>\n                      </v-row>\n                  </v-col>\n                  <v-col cols=\"6\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"2\" class=\"text-right grey--text\">\n                              카테고리\n                          </v-col>\n                          <v-col>\n                              <v-select\n                                      :items=\"config.category2\"\n                                      v-model=\"vModel.data.category\"\n                                      label=\"선택\"\n                                      color=\"secondary\"\n                                      :rules=\"config.categoryRules\"\n                                      :disabled=\"!vModel.data.type\"\n                                      required />\n                          </v-col>\n                      </v-row>\n                  </v-col>\n              </v-row>\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\">\n                  <v-col cols=\"6\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"2\" class=\"text-right grey--text\">\n                              글쓴이\n                          </v-col>\n                          <v-col>\n                              <v-text-field\n                                      label=\"글쓴이\"\n                                      type=\"text\"\n                                      color=\"secondary\"\n                                      v-model=\"vModel.data.writer\"\n                                      :rules=\"config.writerRules\"\n                                      required />\n                          </v-col>\n                      </v-row>\n                  </v-col>\n                  <v-col cols=\"6\" class=\"pt-0 pb-0\" v-if=\"vModel.data.type !== 'Video'\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"2\" class=\"text-right grey--text\">\n                              썸네일\n                          </v-col>\n                          <v-col v-if=\"!vModel.data.thumbnail_url || response.routeName === 'contentsRegister'\">\n                                  <v-file-input v-model=\"thumbnail_url\" label=\"파일 첨부\"></v-file-input>\n                          </v-col>\n                          <template v-else>\n                              <v-col cols=\"9\">\n                              <v-text-field\n                                      label=\"파일 첨부\"\n                                      type=\"text\"\n                                      color=\"secondary\"\n                                      v-model=\"vModel.data.thumbnail_url\"\n                                      disabled/>\n                              </v-col>\n                              <div @click=\"thumbnailClose()\" style=\"cursor: pointer;\">X</div>\n                          </template>\n                      </v-row>\n                  </v-col>\n              </v-row>\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\" v-if=\"vModel.data.type !== 'Video'\">\n                  <v-col cols=\"12\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"1\" class=\"text-right grey--text\">\n                              제목\n                          </v-col>\n                          <v-col>\n                              <v-text-field\n                                      label=\"제목\"\n                                      type=\"text\"\n                                      color=\"secondary\"\n                                      v-model=\"vModel.data.title\"\n                                      :rules=\"config.titleRules\"\n                                      required/>\n                          </v-col>\n                      </v-row>\n                  </v-col>\n              </v-row>\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\" v-if=\"vModel.data.type !== 'Video'\">\n                  <v-col cols=\"12\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"1\" class=\"text-right grey--text\">\n                              요약 내용\n                          </v-col>\n                          <v-col>\n                              <v-textarea\n                                      label=\"요약 내용\"\n                                      color=\"secondary\"\n                                      auto-grow\n                                      rows=\"1\"\n                                      row-height=\"5\"\n                                      no-resize\n                                      v-model=\"vModel.data.sub_title\"\n                                      :rules=\"config.subTitleRules\"\n                                      required />\n                          </v-col>\n                      </v-row>\n                  </v-col>\n              </v-row>\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\" v-if=\"vModel.data.type === 'Video'\">\n                  <v-col cols=\"12\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"1\" class=\"text-right grey--text\">\n                              URL\n                          </v-col>\n                          <v-col>\n                              <v-text-field\n                                      label=\"URL 주소\"\n                                      type=\"text\"\n                                      color=\"secondary\"\n                                      v-model=\"vModel.data.contents\"\n                                      :rules=\"config.urlRules\"\n                                      required/>\n                          </v-col>\n                      </v-row>\n                  </v-col>\n              </v-row>\n            <v-row justify=\"space-around\" v-if=\"vModel.data.type !== 'Video'\">\n              <v-col cols=\"12\">\n                  <froala :tag=\"'textarea'\" :config=\"config2\" v-model=\"vModel.data.contents\"></froala>\n              </v-col>\n            </v-row>\n            <v-row justify=\"center\"\n                   class=\"mt-5\">\n              <v-btn\n                      color=\"default\"\n                      @click=\"beforePage()\">\n                취소\n              </v-btn>\n              <v-btn\n                      :disabled=\"!vModel.valid\"\n                      color=\"success\"\n                      @click=\"submitRegister(resultType)\">\n                {{resultType}}\n              </v-btn>\n            </v-row>\n          </v-form>\n        </v-card-text>\n      </base-material-card>\n      </v-col>\n    </v-row>\n    <base-material-snackbar\n      v-model=\"vModel.snackbar\"\n      :type=\"vModel.snackbarType\"\n      v-bind=\"{\n        'top': true,\n        'right': true\n      }\">\n      <span style=\"display:block;width:300px;margin:0;\">{{vModel.errorMessage}}</span>\n    </base-material-snackbar>\n  </v-container>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\n\nexport default {\n  created () {\n    this.refresh()\n  },\n  data () {\n    return {\n      config2: {\n        language: 'ko',\n        theme: 'gray',\n        height: 500,\n        toolbarStickyOffset: 55,\n        toolbarButtons: [\n          // 'fullscreen',\n          'bold',\n          'italic',\n          'underline',\n          'strikeThrough',\n          'subscript',\n          'superscript',\n          'fontFamily',\n          'paragraphFormat',\n          // 'fontSize',\n          '|',\n          'color',\n          'inlineStyle',\n          '|',\n          'align',\n          'formatOL',\n          'formatUL',\n          'outdent',\n          'indent',\n          '-',\n          'insertLink',\n          'insertImage',\n          'insertTable',\n          '|',\n          'quote',\n          'insertHR',\n          'undo',\n          'redo',\n          // 'clearFormatting',\n          'selectAll',\n          // 'html',\n        ],\n        events: {\n          'image.error': function (error, response) {\n            // Do something here.\n            // this is the editor instance.\n            this.snack('warning', '관리자에게 문의 바랍니다.')\n            console.log(error)\n          }\n        },\n        pluginsEnabled: null,\n        imageUploadParam: 'upload',\n        requestHeaders: {\n          Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('cdpUser')).accessToken\n        },\n        imageUploadURL: 'http://api-dev.redpp.co.kr/contents/file-upload',\n        imageUploadMethod: 'POST',\n        imageMaxSize: 5 * 1024 * 1024,\n        imageAllowedTypes: ['jpeg', 'jpg', 'png'],\n        imageManagerPreloader: '',\n        imageManagerPageSize: 20,\n        imageManagerScrollOffset: 10,\n        imageManagerLoadURL: '/froala_files.json',\n        imageManagerLoadMethod: 'GET',\n        imageManagerDeleteURL: '/froala_files/destroy',\n        imageManagerDeleteMethod: 'DELETE',\n      },\n      response: {\n        routeName: this.$route.name,\n        category: null,\n        category2: {},\n        contents: null,\n        partner: null,\n        register: null,\n        edit: null,\n        thumbnailVal: true,\n        image: [],\n      },\n      vModel: {\n        valid: true,\n        lineTap: 0,\n        snackbar: false,\n        snackbarType: 'warning',\n        errorMessage: null,\n        fresh: false,\n        created: this.$moment(new Date()).format('YYYY-MM-DD'),\n        data: {\n          title: null,\n          sub_title: null,\n          writer: null,\n          type: null,\n          category: null,\n          contents: null,\n          partner: null,\n          thumbnail_url: null,\n        },\n      },\n      thumbnail_url: null,\n      config: {\n        category1: [],\n        category2: [],\n        partner: [],\n        titleRules: [ v => !!v || '제목을 입력하세요.' ],\n        subTitleRules: [ v => !!v || '요약 내용을 입력하세요.' ],\n        writerRules: [ v => !!v || '글쓴이를 입력하세요.' ],\n        typeRules: [ v => !!v || '컨텐츠 종류를 선택하세요.' ],\n        categoryRules: [ v => !!v || '카테고리를 선택하세요.' ],\n        partnerRules: [ v => !!v || 'CP를 선택하세요.' ],\n        urlRules: [ v => !!v || 'url을 입력하세요.' ],\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['xhttp']),\n    snack (type, val) {\n      this.vModel.errorMessage = val\n      this.vModel.snackbarType = type\n      this.vModel.snackbar = true\n    },\n    beforePage () {\n      this.$router.go(-1)\n    },\n    refresh () {\n      this.getCategories()\n      this.getPartners()\n    },\n    changeType (val) {\n      this.vModel.data.category = null\n      this.config.category2 = this.response.category2[val]\n    },\n    thumbnailClose () {\n      this.vModel.data.thumbnail_url = null\n      this.response.thumbnailVal = true\n    },\n    ChangeimageTag (val) {\n      let img = document.querySelectorAll('.fr-img-space-wrap')\n      let caption = document.querySelectorAll('.fr-inner')\n      for (let i = 0; i < img.length; i++) {\n        var div = document.querySelectorAll('.fr-img-space-wrap')[i].outerHTML\n        var aaa = div.replace(/(<div)(.+?)(<\\s?\\/\\s?div>)/, '<figure$2</figure>')\n        document.querySelectorAll('.fr-img-space-wrap')[i].outerHTML = aaa\n      }\n      for (let i = 0; i < caption.length; i++) {\n        var div2 = document.querySelectorAll('.fr-inner')[i].outerHTML\n        var aaa2 = div2.replace(/(<span)(.+?)(<\\s?\\/\\s?span>)/, '<figcaption$2</figcaption>')\n        document.querySelectorAll('.fr-inner')[i].outerHTML = aaa2\n      }\n      var text = document.querySelector('.fr-element').innerHTML\n      this.vModel.data.contents = text\n      this.ContentsValidate(val)\n    },\n    getCategories () {\n      this.xhttp({\n        url: '/categories',\n        method: 'get',\n        params: null\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.category = response.data.data.categories\n          this.config.category1 = this.response.category.map(function ($value) {\n            return { value: $value.alias, text: $value.name }\n          })\n          this.config.category1 = this.config.category1.filter(function ($value) {\n            return $value.value !== 'Toon'\n          })\n          for (let i in this.response.category) {\n            this.response.category2[this.response.category[i].alias] = this.response.category[i].children.map(function ($value) {\n              return { value: $value.id, text: $value.name }\n            })\n          }\n          if (this.response.routeName === 'contentsEdit') {\n            this.getContents()\n          }\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    getContents () {\n      this.xhttp({\n        url: '/contents/' + this.$route.params.contents_id + '/edit',\n        method: 'get',\n        params: null\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.contents = response.data.data.contents\n          this.vModel.data = this.response.contents\n          this.config.category2 = this.response.category2[this.vModel.data.type]\n          if (this.vModel.data.thumbnail_url) {\n            this.response.thumbnailVal = false\n          }\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    getPartners () {\n      let send = {\n        orderby: 'created',\n        direction: 'desc'\n      }\n      this.xhttp({\n        url: '/partners',\n        method: 'get',\n        params: send\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.partner = response.data.data.partners[0].key\n          /* this.config.partner = this.response.partner.partners.map(function ($value) {\n            return { value: $value.key, text: $value.name }\n          }) */\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    submitRegister (val) {\n      if (this.$refs.form.validate()) {\n        let message = '등록 하시겠습니까?'\n        if (val === '수정') {\n          message = '수정 하시겠습니까?'\n        }\n        if (confirm(message)) {\n          this.ChangeimageTag(val)\n          // this.replaceImageTags(val)\n        }\n      }\n    },\n    async replaceImageTags (val) {\n      const target = document.querySelectorAll('figure>img')\n      const array = []\n      const willChangeTarget = []\n\n      target.forEach(v => {\n        if (v.getAttribute('src') && v.getAttribute('src').match(/base64/)) {\n          array.push(v.getAttribute('src'))\n          // @ts-ignore\n          willChangeTarget.push(v)\n        }\n      })\n\n      if (array.length > 0) {\n        const data = new FormData()\n        for (let i = 0; i < array.length; i++) {\n          const dataForSend = this.convertImage(array[i], `image${i}`)\n          data.set('upload', dataForSend)\n          await this.xhttp({\n            url: '/contents/file-upload',\n            method: 'post',\n            data: data\n          }).then((response) => {\n            if (response.status === 200) {\n              this.response.image[i] = response.data.data.data\n              willChangeTarget[i].setAttribute('src', response.data.data.data)\n              if (val === '등록') {\n                const wrapper = document.createElement('div')\n                wrapper.innerHTML = this.vModel.data.contents\n                wrapper.querySelectorAll('figure>img')[i].setAttribute('src', response.data.data.data)\n                this.vModel.data.contents = wrapper.innerHTML\n              }\n              if (i === array.length - 1) {\n                this.ContentsValidate(val)\n              }\n            }\n          }).catch((error) => {\n            if (error.message === 'Request failed with status code 401') {\n              this.$router.push({ 'name': 'UserLogin' })\n            } else {\n              this.snack('warning', '관리자에게 문의 바랍니다.')\n            }\n          })\n        }\n      } else {\n        this.ContentsValidate(val)\n      }\n    },\n    convertImage (dataUrl, filename) {\n      let arr = dataUrl.split(',')\n      let mime = arr[0].match(/:(.*?);/)[1]\n      let bstr = atob(arr[1])\n      let n = bstr.length\n      let u8arr = new Uint8Array(n)\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n)\n      }\n      return new File([u8arr], filename, { type: mime })\n    },\n    ContentsValidate (val) {\n      if (this.vModel.data.type === 'Video') {\n        if (val === '등록') {\n          this.putContents()\n        } else {\n          this.contentsEdit()\n        }\n      } else {\n        if (this.vModel.data.contents) {\n          if (val === '등록') {\n            this.putContents()\n          } else {\n            this.contentsEdit()\n          }\n        } else {\n          this.snack('warning', '내용을 입력하세요.')\n        }\n      }\n    },\n    putContents () {\n      let send = this.vModel.data\n      this.xhttp({\n        url: '/contents/' + this.response.partner + '/create',\n        method: 'post',\n        data: send\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.register = response.data.data\n          this.snack('success', '컨텐츠 등록이 완료되었습니다.')\n          this.$router.push({ name: 'contentsList' })\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    contentsEdit () {\n      for (let i = 0; i < this.response.image.length; i++) {\n        const wrapper = document.createElement('div')\n        wrapper.innerHTML = this.vModel.data.contents\n        let img = wrapper.querySelectorAll('figure>img')\n        for (let j = 0; j < img.length; j++) {\n          if (img[j].getAttribute('src').slice(0, 4) === 'data') {\n            wrapper.querySelectorAll('figure>img')[j].setAttribute('src', this.response.image[i])\n            this.vModel.data.contents = wrapper.innerHTML\n          }\n        }\n      }\n      let send = this.vModel.data\n      send.partner = this.response.partner\n      this.xhttp({\n        url: 'contents/' + this.response.partner + '/update/' + this.$route.params.contents_id,\n        method: 'put',\n        data: send\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.edit = response.data.data\n          this.snack('success', '수정 완료되었습니다.')\n          this.beforePage()\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    thumbnailFile () {\n      let formData = new FormData()\n      formData.append('upload', this.thumbnail_url)\n      this.xhttp({\n        url: '/contents/file-upload',\n        method: 'post',\n        data: formData\n      }).then((response) => {\n        if (response.status === 200) {\n          this.vModel.data.thumbnail_url = response.data.link\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n  },\n  computed: {\n    resultType () {\n      if (this.response.routeName === 'contentsEdit') {\n        return '수정'\n      } else {\n        return '등록'\n      }\n    }\n  },\n  watch: {\n    thumbnail_url: function (val) {\n      if (val) {\n        this.thumbnailFile()\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n    .v-application p {\n        margin-bottom: 10px;\n    }\n</style>\n"]}]}