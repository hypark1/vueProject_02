{"remainingRequest":"/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hypark/project/cdp-admin/src/views/ads/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hypark/project/cdp-admin/src/views/ads/list.vue","mtime":1582101132544},{"path":"/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js","mtime":1573115876135},{"path":"/Users/hypark/project/cdp-admin/node_modules/babel-loader/lib/index.js","mtime":1573115869688},{"path":"/Users/hypark/project/cdp-admin/node_modules/vuetify-loader/lib/loader.js","mtime":1573794163850},{"path":"/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js","mtime":1573115876135},{"path":"/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/index.js","mtime":1573437292219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/ads","sourcesContent":["<template>\n  <v-container\n          id=\"inAds\"\n          fluid\n          tag=\"section\">\n    <v-row\n            align=\"center\"\n            justify=\"center\">\n      <v-col cols=\"12\">\n        <base-material-card\n                color=\"green\">\n          <template v-slot:heading>\n            <h1 class=\"display-2 font-weight-regular\">\n             광고 관리\n            </h1>\n          </template>\n          <v-card-text>\n            <v-row justify=\"space-between\" align=\"center\" class=\"ml-1\">\n              <v-col cols=\"4\">\n                <v-row>\n                  <v-col cols=\"6\">\n                  <v-select\n                          :items=\"config.mediaOptions\"\n                          v-model=\"vModel.media\"\n                          label=\"매체를 선택하세요.\"\n                          color=\"secondary\"\n                          @change=\"selectChange()\" />\n                  </v-col>\n                  <v-col cols=\"6\">\n                  <v-select\n                          :items=\"config.typeOptions\"\n                          v-model=\"vModel.adsType\"\n                          label=\"광고 타입을 선택하세요.\"\n                          color=\"secondary\"\n                          @change=\"selectChange()\" />\n                  </v-col>\n                </v-row>\n              </v-col>\n              <v-btn :disabled=\"!vModel.media || !vModel.adsType\"\n                     color=\"warning\"\n                     @click=\"createAds\">\n                신규 등록\n              </v-btn>\n            </v-row>\n            <v-row justify=\"space-between\" align=\"center\">\n              <v-col cols=\"6\">\n                <v-data-table\n                        :headers=\"config.headers\"\n                        :items=\"resultList\"\n                        :items-per-page=\"resultList.length\"\n                        item-key=\"key\"\n                        no-data-text=\"리스트가 없습니다.\"\n                        @click:row=\"listClick\"\n                        hide-default-footer>\n                  <template v-slot:body=\"{ items }\">\n                    <draggable v-model=\"response.list.data\" tag=\"tbody\"\n                               v-bind=\"config.dragOptions\"\n                               @start=\"drag = true\"\n                               @end=\"drag = false\">\n                      <tr @click=\"listClick(item.key)\" v-for=\"(item,index) in response.list.data\" :key=\"item.key\" style=\"cursor: move;background: #fff;\">\n                        <td style=\"text-align: center;\">{{ index + 1 }}</td>\n                        <td style=\"text-align: center;\">{{item.title}}</td>\n                        <td style=\"text-align: center;width:130px;\">\n                          <v-btn small @click=\"listClose(item.key)\"><v-icon>mdi-delete</v-icon></v-btn>\n                        </td>\n                        <td style=\"text-align: center;\">\n                          <v-btn color=\"success\" small><v-icon>mdi-chevron-right</v-icon></v-btn>\n                        </td>\n                      </tr>\n                    </draggable>\n                  </template>\n                </v-data-table>\n              </v-col>\n              <v-col cols=\"6\">\n                <v-form\n                        v-model=\"vModel.valid\"\n                        ref=\"form\">\n                  <v-text-field\n                          label=\"제목\"\n                          type=\"text\"\n                          color=\"secondary\"\n                          v-model=\"vModel.title\"\n                          :rules=\"config.titleRules\"\n                          :disabled=\"!vModel.type\"\n                          required />\n                  <v-textarea\n                          label=\"코드\"\n                          color=\"secondary\"\n                          auto-grow\n                          rows=\"1\"\n                          row-height=\"5\"\n                          no-resize\n                          v-model=\"vModel.code\"\n                          :rules=\"config.codeRules\"\n                          :disabled=\"!vModel.type\"\n                          required />\n                </v-form>\n                <div class=\"text-center\" v-if=\"resultList\">\n                  <template v-if=\"vModel.type === 'edit' && resultList.length > 0\">\n                    <v-btn :disabled=\"!vModel.valid\"\n                           color=\"success\"\n                           @click=\"adsEdit()\">\n                      수정\n                    </v-btn>\n                  </template>\n                  <template v-else-if=\"vModel.type === 'create'\">\n                    <v-btn :disabled=\"!vModel.valid\"\n                           color=\"success\"\n                           @click=\"adsCreate()\">\n                      등록\n                    </v-btn>\n                  </template>\n                </div>\n              </v-col>\n            </v-row>\n            <v-row>\n              <v-btn :disabled=\"!response.list.data.length > 0\"\n                     color=\"secondary\"\n                     @click=\"listEdit\">\n                순서 저장\n              </v-btn>\n            </v-row>\n          </v-card-text>\n        </base-material-card>\n      </v-col>\n    </v-row>\n      <base-material-snackbar\n              v-model=\"vModel.snackbar\"\n              :type=\"vModel.snackbarType\"\n              v-bind=\"{\n        'top': true,\n        'right': true\n      }\">\n          <span style=\"display:block;width:300px;margin:0;\">{{vModel.errorMessage}}</span>\n      </base-material-snackbar>\n  </v-container>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport draggable from 'vuedraggable'\n\nexport default {\n  components: {\n    draggable,\n  },\n  created () {\n    this.refresh()\n  },\n  data () {\n    return {\n      response: {\n        adsType: null,\n        media: null,\n        list: { data: [] },\n        listEdit: null,\n        listDelete: null,\n        create: null,\n      },\n      vModel: {\n        snackbar: false,\n        snackbarType: 'warning',\n        errorMessage: null,\n        valid: true,\n        listSelected: null,\n        media: null,\n        adsType: null,\n        title: '',\n        code: '',\n        listOpen: '',\n        type: null\n      },\n      config: {\n        typeOptions: [],\n        mediaOptions: [],\n        dragOptions: {\n          animation: 200,\n          group: 'description',\n          disabled: false,\n          ghostClass: 'ghost'\n        },\n        headers: [\n          { text: 'No', value: 'no', align: 'center' },\n          { text: '제목', value: 'title', align: 'center' },\n          { text: '삭제', value: 'hidden', align: 'center' },\n          { text: '수정', value: 'edit', align: 'center' },\n        ],\n        titleRules: [ v => !!v || '제목을 입력하세요.' ],\n        codeRules: [ v => !!v || '코드를 입력하세요.' ],\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['xhttp']),\n    snack (type, val) {\n      this.vModel.errorMessage = val\n      this.vModel.snackbarType = type\n      this.vModel.snackbar = true\n    },\n    createAds () {\n      this.vModel.type = 'create'\n      this.vModel.title = null\n      this.vModel.code = null\n    },\n    selectChange () {\n      this.response.list = { data: [] }\n      if (this.vModel.media && this.vModel.adsType) {\n        this.$router.replace({ 'name': 'adsList', query: { media: this.vModel.media, type: this.vModel.adsType } })\n        this.adsList()\n      }\n    },\n    listClick (val) {\n      let list = this.response.list.data.filter(function ($value) {\n        return $value.key === val\n      })\n      this.vModel.listOpen = val\n      this.vModel.title = list[0].title\n      this.vModel.code = list[0].code\n      this.vModel.type = 'edit'\n    },\n    refresh () {\n      this.mediaList()\n      this.adsType()\n      if (this.$route.query.media) {\n        this.vModel.media = this.$route.query.media\n        this.vModel.adsType = Number(this.$route.query.type)\n        this.adsList()\n      }\n    },\n    mediaList () {\n      let send = {\n        orderby: 'created',\n        direction: 'desc'\n      }\n      this.xhttp({\n        url: '/media',\n        method: 'get',\n        params: send\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.media = response.data.data.media\n          this.config.mediaOptions = this.response.media.map(function ($value) {\n            return { value: $value.key, text: $value.name }\n          })\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    adsType () {\n      this.xhttp({\n        url: '/ads/type',\n        method: 'get',\n        params: null\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.adsType = response.data.data\n          this.config.typeOptions = this.response.adsType.map(function ($value) {\n            return { value: $value.id, text: $value.name }\n          })\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    adsList () {\n      this.xhttp({\n        url: '/' + this.vModel.media + '/ads/' + this.vModel.adsType,\n        method: 'get',\n        params: null\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.list = response.data.data\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    listEdit () {\n      if (this.response.list.data.length > 0) {\n        let data = this.response.list.data\n        let key = data.map(function ($value) {\n          return { key: $value.key }\n        })\n        let send = {\n          ads: key\n        }\n        this.xhttp({\n          url: '/' + this.vModel.media + '/ads/rank',\n          method: 'put',\n          data: send\n        }).then((response) => {\n          if (response.status === 200) {\n            this.response.listEdit = response.data.data\n            this.snack('success', '순서 수정 완료되었습니다.')\n          }\n        }).catch((error) => {\n          if (error.message === 'Request failed with status code 401') {\n            this.$router.push({ 'name': 'UserLogin' })\n          } else {\n            this.snack('warning', '관리자에게 문의 바랍니다.')\n          }\n        })\n      }\n    },\n    listClose (val) {\n      if (confirm('삭제 하시겠습니까?')) {\n        this.xhttp({\n          url: this.vModel.media + '/ads/' + val,\n          method: 'delete',\n          data: null\n        }).then((response) => {\n          if (response.status === 200) {\n            this.response.listDelete = response.data.data\n            this.snack('success', '삭제 완료되었습니다.')\n            this.vModel.title = null\n            this.vModel.code = null\n            this.vModel.type = null\n            this.adsList()\n          }\n        }).catch((error) => {\n          if (error.message === 'Request failed with status code 401') {\n            this.$router.push({ 'name': 'UserLogin' })\n          } else {\n            this.snack('warning', '관리자에게 문의 바랍니다.')\n          }\n        })\n      }\n    },\n    adsEdit () {\n      if (this.$refs.form.validate()) {\n        if (confirm('수정 하시겠습니까?')) {\n          let send = {\n            title: this.vModel.title,\n            code: this.vModel.code,\n            type: this.vModel.adsType\n          }\n          this.xhttp({\n            url: '/' + this.vModel.media + '/ads/' + this.vModel.listOpen,\n            method: 'put',\n            data: send\n          }).then((response) => {\n            if (response.status === 200) {\n              this.response.listEdit = response.data.data\n              this.snack('success', '수정 완료되었습니다.')\n              this.adsList()\n            }\n          }).catch((error) => {\n            if (error.message === 'Request failed with status code 401') {\n              this.$router.push({ 'name': 'UserLogin' })\n            } else {\n              this.snack('warning', '관리자에게 문의 바랍니다.')\n            }\n          })\n        }\n      }\n    },\n    adsCreate () {\n      if (this.$refs.form.validate()) {\n        if (confirm('등록 하시겠습니까?')) {\n          let send = {\n            title: this.vModel.title,\n            code: this.vModel.code,\n            type: this.vModel.adsType\n          }\n          this.xhttp({\n            url: '/' + this.vModel.media + '/ads',\n            method: 'post',\n            data: send\n          }).then((response) => {\n            if (response.status === 200) {\n              this.response.create = response.data.data\n              this.snack('success', '등록 완료되었습니다.')\n              this.vModel.title = ''\n              this.vModel.code = ''\n              this.vModel.type = null\n              this.adsList()\n            }\n          }).catch((error) => {\n            if (error.message === 'Request failed with status code 401') {\n              this.$router.push({ 'name': 'UserLogin' })\n            } else {\n              this.snack('warning', '관리자에게 문의 바랍니다.')\n            }\n          })\n        }\n      }\n    },\n  },\n  computed: {\n    resultList () {\n      if (this.response.list) {\n        return this.response.list.data\n      } else {\n        return false\n      }\n    },\n  },\n}\n</script>\n\n<style>\n  textarea { resize: none; min-height: 100px;}\n  #inAds .flip-list-move {\n    transition: transform 0.5s;\n  }\n  #inAds .no-move {\n    transition: transform 0s;\n  }\n  #inAds .ghost {\n    opacity: 0.5;\n    background: #c8ebfb;\n  }\n  #inAds table .tableTitle p {\n    cursor: pointer;\n  }\n  #inAds table .tableTitle p:hover {\n    text-decoration: underline;\n  }\n</style>\n"]}]}