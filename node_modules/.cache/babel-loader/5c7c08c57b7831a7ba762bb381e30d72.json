{"remainingRequest":"/Users/hypark/project/cdp-admin/node_modules/babel-loader/lib/index.js!/Users/hypark/project/cdp-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/hypark/project/cdp-admin/src/store/xhttp.js","dependencies":[{"path":"/Users/hypark/project/cdp-admin/src/store/xhttp.js","mtime":1581987257433},{"path":"/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js","mtime":1573115876135},{"path":"/Users/hypark/project/cdp-admin/node_modules/babel-loader/lib/index.js","mtime":1573115869688},{"path":"/Users/hypark/project/cdp-admin/node_modules/eslint-loader/index.js","mtime":1573115873614}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIGFjdGlvbnM6IHsKICAgIHhodHRwOiBmdW5jdGlvbiB4aHR0cChfcmVmLCBwYXlsb2FkKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgdmFyIGh0dHBSZXF1ZXN0ID0gewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdYLVJlcXVlc3RlZC1XaXRoJzogJ1hNTEh0dHBSZXF1ZXN0JywKICAgICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICB9LAogICAgICAgIHVybDogbnVsbCwKICAgICAgICBtZXRob2Q6IG51bGwsCiAgICAgICAgZGF0YTogbnVsbCwKICAgICAgICBwYXJhbXM6IG51bGwsCiAgICAgICAgYmFzZVVSTDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyAnaHR0cDovL2FwaS5haWluZmVlZC5jb20nIDogJ2h0dHA6Ly9hcGkuYWlpbmZlZWQuY29tJywKICAgICAgICByZXNwb25zZVR5cGU6ICdqc29uJywKICAgICAgICByZXNwb25zZUVuY29kaW5nOiAndXRmOCcKICAgICAgfTsKICAgICAgdmFyIHNlc3Npb24gPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjZHBVc2VyJykpOwoKICAgICAgaWYgKHNlc3Npb24pIHsKICAgICAgICBodHRwUmVxdWVzdC5oZWFkZXJzLkF1dGhvcml6YXRpb24gPSAnQmVhcmVyICcgKyBzZXNzaW9uLmFjY2Vzc1Rva2VuOwogICAgICB9CgogICAgICBodHRwUmVxdWVzdC51cmwgPSBwYXlsb2FkLnVybCA/IHBheWxvYWQudXJsIDogbnVsbDsKICAgICAgaHR0cFJlcXVlc3QubWV0aG9kID0gcGF5bG9hZC5tZXRob2QgPyBwYXlsb2FkLm1ldGhvZCA6IG51bGw7CiAgICAgIGh0dHBSZXF1ZXN0LmRhdGEgPSBwYXlsb2FkLmRhdGEgPyBwYXlsb2FkLmRhdGEgOiBudWxsOwogICAgICBodHRwUmVxdWVzdC5wYXJhbXMgPSBwYXlsb2FkLnBhcmFtcyA/IHBheWxvYWQucGFyYW1zIDogbnVsbDsKICAgICAgaHR0cFJlcXVlc3QuaGVhZGVycyA9IHBheWxvYWQuaGVhZGVycyA/IHBheWxvYWQuaGVhZGVycyA6IGh0dHBSZXF1ZXN0LmhlYWRlcnM7CiAgICAgIGh0dHBSZXF1ZXN0LmNvbW1pdCA9IGNvbW1pdDsKICAgICAgdmFyIHJlc3AgPSBheGlvcyhodHRwUmVxdWVzdCk7CiAgICAgIHJldHVybiByZXNwOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/hypark/project/cdp-admin/src/store/xhttp.js"],"names":["axios","actions","xhttp","payload","commit","httpRequest","headers","url","method","data","params","baseURL","process","env","NODE_ENV","responseType","responseEncoding","session","JSON","parse","localStorage","getItem","Authorization","accessToken","resp"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KADO,uBACYC,OADZ,EACqB;AAAA,UAAnBC,MAAmB,QAAnBA,MAAmB;AAC1B,UAAMC,WAAW,GAAG;AAClBC,QAAAA,OAAO,EAAE;AACP,8BAAoB,gBADb;AAEP,oBAAU;AAFH,SADS;AAKlBC,QAAAA,GAAG,EAAE,IALa;AAMlBC,QAAAA,MAAM,EAAE,IANU;AAOlBC,QAAAA,IAAI,EAAE,IAPY;AAQlBC,QAAAA,MAAM,EAAE,IARU;AASlBC,QAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyC,yBAAzC,GAAqE,yBAT5D;AAUlBC,QAAAA,YAAY,EAAE,MAVI;AAWlBC,QAAAA,gBAAgB,EAAE;AAXA,OAApB;AAaA,UAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAd;;AACA,UAAIJ,OAAJ,EAAa;AACXZ,QAAAA,WAAW,CAACC,OAAZ,CAAoBgB,aAApB,GAAoC,YAAYL,OAAO,CAACM,WAAxD;AACD;;AACDlB,MAAAA,WAAW,CAACE,GAAZ,GAAmBJ,OAAO,CAACI,GAAR,GAAcJ,OAAO,CAACI,GAAtB,GAA4B,IAA/C;AACAF,MAAAA,WAAW,CAACG,MAAZ,GAAsBL,OAAO,CAACK,MAAR,GAAiBL,OAAO,CAACK,MAAzB,GAAkC,IAAxD;AACAH,MAAAA,WAAW,CAACI,IAAZ,GAAoBN,OAAO,CAACM,IAAR,GAAeN,OAAO,CAACM,IAAvB,GAA8B,IAAlD;AACAJ,MAAAA,WAAW,CAACK,MAAZ,GAAsBP,OAAO,CAACO,MAAR,GAAiBP,OAAO,CAACO,MAAzB,GAAkC,IAAxD;AACAL,MAAAA,WAAW,CAACC,OAAZ,GAAuBH,OAAO,CAACG,OAAR,GAAkBH,OAAO,CAACG,OAA1B,GAAoCD,WAAW,CAACC,OAAvE;AACAD,MAAAA,WAAW,CAACD,MAAZ,GAAqBA,MAArB;AACA,UAAMoB,IAAI,GAAGxB,KAAK,CAACK,WAAD,CAAlB;AAEA,aAAOmB,IAAP;AACD;AA5BM;AADI,CAAf","sourcesContent":["import axios from 'axios'\n\nexport default {\n  actions: {\n    xhttp ({ commit }, payload) {\n      const httpRequest = {\n        headers: {\n          'X-Requested-With': 'XMLHttpRequest',\n          'Accept': 'application/json'\n        },\n        url: null,\n        method: null,\n        data: null,\n        params: null,\n        baseURL: process.env.NODE_ENV === 'development' ? 'http://api.aiinfeed.com' : 'http://api.aiinfeed.com',\n        responseType: 'json',\n        responseEncoding: 'utf8'\n      }\n      let session = JSON.parse(localStorage.getItem('cdpUser'))\n      if (session) {\n        httpRequest.headers.Authorization = 'Bearer ' + session.accessToken\n      }\n      httpRequest.url = (payload.url ? payload.url : null)\n      httpRequest.method = (payload.method ? payload.method : null)\n      httpRequest.data = (payload.data ? payload.data : null)\n      httpRequest.params = (payload.params ? payload.params : null)\n      httpRequest.headers = (payload.headers ? payload.headers : httpRequest.headers)\n      httpRequest.commit = commit\n      const resp = axios(httpRequest)\n\n      return resp\n    }\n  }\n}\n"]}]}