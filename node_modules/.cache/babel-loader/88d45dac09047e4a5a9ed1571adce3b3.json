{"remainingRequest":"/Users/hypark/project/cdp-admin/node_modules/babel-loader/lib/index.js!/Users/hypark/project/cdp-admin/node_modules/vuetify-loader/lib/loader.js!/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hypark/project/cdp-admin/src/views/ads/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hypark/project/cdp-admin/src/views/ads/list.vue","mtime":1582101132544},{"path":"/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js","mtime":1573115876135},{"path":"/Users/hypark/project/cdp-admin/node_modules/babel-loader/lib/index.js","mtime":1573115869688},{"path":"/Users/hypark/project/cdp-admin/node_modules/vuetify-loader/lib/loader.js","mtime":1573794163850},{"path":"/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js","mtime":1573115876135},{"path":"/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/index.js","mtime":1573437292219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container\n          id=\"inAds\"\n          fluid\n          tag=\"section\">\n    <v-row\n            align=\"center\"\n            justify=\"center\">\n      <v-col cols=\"12\">\n        <base-material-card\n                color=\"green\">\n          <template v-slot:heading>\n            <h1 class=\"display-2 font-weight-regular\">\n             광고 관리\n            </h1>\n          </template>\n          <v-card-text>\n            <v-row justify=\"space-between\" align=\"center\" class=\"ml-1\">\n              <v-col cols=\"4\">\n                <v-row>\n                  <v-col cols=\"6\">\n                  <v-select\n                          :items=\"config.mediaOptions\"\n                          v-model=\"vModel.media\"\n                          label=\"매체를 선택하세요.\"\n                          color=\"secondary\"\n                          @change=\"selectChange()\" />\n                  </v-col>\n                  <v-col cols=\"6\">\n                  <v-select\n                          :items=\"config.typeOptions\"\n                          v-model=\"vModel.adsType\"\n                          label=\"광고 타입을 선택하세요.\"\n                          color=\"secondary\"\n                          @change=\"selectChange()\" />\n                  </v-col>\n                </v-row>\n              </v-col>\n              <v-btn :disabled=\"!vModel.media || !vModel.adsType\"\n                     color=\"warning\"\n                     @click=\"createAds\">\n                신규 등록\n              </v-btn>\n            </v-row>\n            <v-row justify=\"space-between\" align=\"center\">\n              <v-col cols=\"6\">\n                <v-data-table\n                        :headers=\"config.headers\"\n                        :items=\"resultList\"\n                        :items-per-page=\"resultList.length\"\n                        item-key=\"key\"\n                        no-data-text=\"리스트가 없습니다.\"\n                        @click:row=\"listClick\"\n                        hide-default-footer>\n                  <template v-slot:body=\"{ items }\">\n                    <draggable v-model=\"response.list.data\" tag=\"tbody\"\n                               v-bind=\"config.dragOptions\"\n                               @start=\"drag = true\"\n                               @end=\"drag = false\">\n                      <tr @click=\"listClick(item.key)\" v-for=\"(item,index) in response.list.data\" :key=\"item.key\" style=\"cursor: move;background: #fff;\">\n                        <td style=\"text-align: center;\">{{ index + 1 }}</td>\n                        <td style=\"text-align: center;\">{{item.title}}</td>\n                        <td style=\"text-align: center;width:130px;\">\n                          <v-btn small @click=\"listClose(item.key)\"><v-icon>mdi-delete</v-icon></v-btn>\n                        </td>\n                        <td style=\"text-align: center;\">\n                          <v-btn color=\"success\" small><v-icon>mdi-chevron-right</v-icon></v-btn>\n                        </td>\n                      </tr>\n                    </draggable>\n                  </template>\n                </v-data-table>\n              </v-col>\n              <v-col cols=\"6\">\n                <v-form\n                        v-model=\"vModel.valid\"\n                        ref=\"form\">\n                  <v-text-field\n                          label=\"제목\"\n                          type=\"text\"\n                          color=\"secondary\"\n                          v-model=\"vModel.title\"\n                          :rules=\"config.titleRules\"\n                          :disabled=\"!vModel.type\"\n                          required />\n                  <v-textarea\n                          label=\"코드\"\n                          color=\"secondary\"\n                          auto-grow\n                          rows=\"1\"\n                          row-height=\"5\"\n                          no-resize\n                          v-model=\"vModel.code\"\n                          :rules=\"config.codeRules\"\n                          :disabled=\"!vModel.type\"\n                          required />\n                </v-form>\n                <div class=\"text-center\" v-if=\"resultList\">\n                  <template v-if=\"vModel.type === 'edit' && resultList.length > 0\">\n                    <v-btn :disabled=\"!vModel.valid\"\n                           color=\"success\"\n                           @click=\"adsEdit()\">\n                      수정\n                    </v-btn>\n                  </template>\n                  <template v-else-if=\"vModel.type === 'create'\">\n                    <v-btn :disabled=\"!vModel.valid\"\n                           color=\"success\"\n                           @click=\"adsCreate()\">\n                      등록\n                    </v-btn>\n                  </template>\n                </div>\n              </v-col>\n            </v-row>\n            <v-row>\n              <v-btn :disabled=\"!response.list.data.length > 0\"\n                     color=\"secondary\"\n                     @click=\"listEdit\">\n                순서 저장\n              </v-btn>\n            </v-row>\n          </v-card-text>\n        </base-material-card>\n      </v-col>\n    </v-row>\n      <base-material-snackbar\n              v-model=\"vModel.snackbar\"\n              :type=\"vModel.snackbarType\"\n              v-bind=\"{\n        'top': true,\n        'right': true\n      }\">\n          <span style=\"display:block;width:300px;margin:0;\">{{vModel.errorMessage}}</span>\n      </base-material-snackbar>\n  </v-container>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport draggable from 'vuedraggable'\n\nexport default {\n  components: {\n    draggable,\n  },\n  created () {\n    this.refresh()\n  },\n  data () {\n    return {\n      response: {\n        adsType: null,\n        media: null,\n        list: { data: [] },\n        listEdit: null,\n        listDelete: null,\n        create: null,\n      },\n      vModel: {\n        snackbar: false,\n        snackbarType: 'warning',\n        errorMessage: null,\n        valid: true,\n        listSelected: null,\n        media: null,\n        adsType: null,\n        title: '',\n        code: '',\n        listOpen: '',\n        type: null\n      },\n      config: {\n        typeOptions: [],\n        mediaOptions: [],\n        dragOptions: {\n          animation: 200,\n          group: 'description',\n          disabled: false,\n          ghostClass: 'ghost'\n        },\n        headers: [\n          { text: 'No', value: 'no', align: 'center' },\n          { text: '제목', value: 'title', align: 'center' },\n          { text: '삭제', value: 'hidden', align: 'center' },\n          { text: '수정', value: 'edit', align: 'center' },\n        ],\n        titleRules: [ v => !!v || '제목을 입력하세요.' ],\n        codeRules: [ v => !!v || '코드를 입력하세요.' ],\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['xhttp']),\n    snack (type, val) {\n      this.vModel.errorMessage = val\n      this.vModel.snackbarType = type\n      this.vModel.snackbar = true\n    },\n    createAds () {\n      this.vModel.type = 'create'\n      this.vModel.title = null\n      this.vModel.code = null\n    },\n    selectChange () {\n      this.response.list = { data: [] }\n      if (this.vModel.media && this.vModel.adsType) {\n        this.$router.replace({ 'name': 'adsList', query: { media: this.vModel.media, type: this.vModel.adsType } })\n        this.adsList()\n      }\n    },\n    listClick (val) {\n      let list = this.response.list.data.filter(function ($value) {\n        return $value.key === val\n      })\n      this.vModel.listOpen = val\n      this.vModel.title = list[0].title\n      this.vModel.code = list[0].code\n      this.vModel.type = 'edit'\n    },\n    refresh () {\n      this.mediaList()\n      this.adsType()\n      if (this.$route.query.media) {\n        this.vModel.media = this.$route.query.media\n        this.vModel.adsType = Number(this.$route.query.type)\n        this.adsList()\n      }\n    },\n    mediaList () {\n      let send = {\n        orderby: 'created',\n        direction: 'desc'\n      }\n      this.xhttp({\n        url: '/media',\n        method: 'get',\n        params: send\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.media = response.data.data.media\n          this.config.mediaOptions = this.response.media.map(function ($value) {\n            return { value: $value.key, text: $value.name }\n          })\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    adsType () {\n      this.xhttp({\n        url: '/ads/type',\n        method: 'get',\n        params: null\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.adsType = response.data.data\n          this.config.typeOptions = this.response.adsType.map(function ($value) {\n            return { value: $value.id, text: $value.name }\n          })\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    adsList () {\n      this.xhttp({\n        url: '/' + this.vModel.media + '/ads/' + this.vModel.adsType,\n        method: 'get',\n        params: null\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.list = response.data.data\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    listEdit () {\n      if (this.response.list.data.length > 0) {\n        let data = this.response.list.data\n        let key = data.map(function ($value) {\n          return { key: $value.key }\n        })\n        let send = {\n          ads: key\n        }\n        this.xhttp({\n          url: '/' + this.vModel.media + '/ads/rank',\n          method: 'put',\n          data: send\n        }).then((response) => {\n          if (response.status === 200) {\n            this.response.listEdit = response.data.data\n            this.snack('success', '순서 수정 완료되었습니다.')\n          }\n        }).catch((error) => {\n          if (error.message === 'Request failed with status code 401') {\n            this.$router.push({ 'name': 'UserLogin' })\n          } else {\n            this.snack('warning', '관리자에게 문의 바랍니다.')\n          }\n        })\n      }\n    },\n    listClose (val) {\n      if (confirm('삭제 하시겠습니까?')) {\n        this.xhttp({\n          url: this.vModel.media + '/ads/' + val,\n          method: 'delete',\n          data: null\n        }).then((response) => {\n          if (response.status === 200) {\n            this.response.listDelete = response.data.data\n            this.snack('success', '삭제 완료되었습니다.')\n            this.vModel.title = null\n            this.vModel.code = null\n            this.vModel.type = null\n            this.adsList()\n          }\n        }).catch((error) => {\n          if (error.message === 'Request failed with status code 401') {\n            this.$router.push({ 'name': 'UserLogin' })\n          } else {\n            this.snack('warning', '관리자에게 문의 바랍니다.')\n          }\n        })\n      }\n    },\n    adsEdit () {\n      if (this.$refs.form.validate()) {\n        if (confirm('수정 하시겠습니까?')) {\n          let send = {\n            title: this.vModel.title,\n            code: this.vModel.code,\n            type: this.vModel.adsType\n          }\n          this.xhttp({\n            url: '/' + this.vModel.media + '/ads/' + this.vModel.listOpen,\n            method: 'put',\n            data: send\n          }).then((response) => {\n            if (response.status === 200) {\n              this.response.listEdit = response.data.data\n              this.snack('success', '수정 완료되었습니다.')\n              this.adsList()\n            }\n          }).catch((error) => {\n            if (error.message === 'Request failed with status code 401') {\n              this.$router.push({ 'name': 'UserLogin' })\n            } else {\n              this.snack('warning', '관리자에게 문의 바랍니다.')\n            }\n          })\n        }\n      }\n    },\n    adsCreate () {\n      if (this.$refs.form.validate()) {\n        if (confirm('등록 하시겠습니까?')) {\n          let send = {\n            title: this.vModel.title,\n            code: this.vModel.code,\n            type: this.vModel.adsType\n          }\n          this.xhttp({\n            url: '/' + this.vModel.media + '/ads',\n            method: 'post',\n            data: send\n          }).then((response) => {\n            if (response.status === 200) {\n              this.response.create = response.data.data\n              this.snack('success', '등록 완료되었습니다.')\n              this.vModel.title = ''\n              this.vModel.code = ''\n              this.vModel.type = null\n              this.adsList()\n            }\n          }).catch((error) => {\n            if (error.message === 'Request failed with status code 401') {\n              this.$router.push({ 'name': 'UserLogin' })\n            } else {\n              this.snack('warning', '관리자에게 문의 바랍니다.')\n            }\n          })\n        }\n      }\n    },\n  },\n  computed: {\n    resultList () {\n      if (this.response.list) {\n        return this.response.list.data\n      } else {\n        return false\n      }\n    },\n  },\n}\n</script>\n\n<style>\n  textarea { resize: none; min-height: 100px;}\n  #inAds .flip-list-move {\n    transition: transform 0.5s;\n  }\n  #inAds .no-move {\n    transition: transform 0s;\n  }\n  #inAds .ghost {\n    opacity: 0.5;\n    background: #c8ebfb;\n  }\n  #inAds table .tableTitle p {\n    cursor: pointer;\n  }\n  #inAds table .tableTitle p:hover {\n    text-decoration: underline;\n  }\n</style>\n"],"sourceRoot":"src/views/ads"}]}