{"remainingRequest":"/Users/hypark/project/cdp-admin/node_modules/babel-loader/lib/index.js!/Users/hypark/project/cdp-admin/node_modules/vuetify-loader/lib/loader.js!/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hypark/project/cdp-admin/src/views/contents/Register2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hypark/project/cdp-admin/src/views/contents/Register2.vue","mtime":1580271750105},{"path":"/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js","mtime":1573115876135},{"path":"/Users/hypark/project/cdp-admin/node_modules/babel-loader/lib/index.js","mtime":1573115869688},{"path":"/Users/hypark/project/cdp-admin/node_modules/vuetify-loader/lib/loader.js","mtime":1573794163850},{"path":"/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js","mtime":1573115876135},{"path":"/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/index.js","mtime":1573437292219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Register2.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container\n    id=\"contentsRegister\"\n    fluid\n    tag=\"section\">\n    <v-row\n            align=\"center\"\n            justify=\"center\">\n      <v-col cols=\"12\">\n      <base-material-card\n              color=\"green\">\n        <template v-slot:heading>\n          <h1 class=\"display-2 font-weight-regular\">\n            컨텐츠 {{resultType}}\n          </h1>\n        </template>\n        <v-card-text>\n          <v-form\n                  v-model=\"vModel.valid\"\n                  ref=\"form\">\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\">\n                  <v-col cols=\"6\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"2\" class=\"text-right grey--text\">\n                              컨텐츠 종류\n                          </v-col>\n                          <v-col>\n                              <v-select\n                                      :items=\"config.category1\"\n                                      v-model=\"vModel.data.type\"\n                                      label=\"선택\"\n                                      color=\"secondary\"\n                                      @change=\"changeType\"\n                                      :rules=\"config.typeRules\"\n                                      :disabled=\"resultType === '수정'\"\n                                      required />\n                          </v-col>\n                      </v-row>\n                  </v-col>\n                  <v-col cols=\"6\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"2\" class=\"text-right grey--text\">\n                              카테고리\n                          </v-col>\n                          <v-col>\n                              <v-select\n                                      :items=\"config.category2\"\n                                      v-model=\"vModel.data.category\"\n                                      label=\"선택\"\n                                      color=\"secondary\"\n                                      :rules=\"config.categoryRules\"\n                                      :disabled=\"!vModel.data.type\"\n                                      required />\n                          </v-col>\n                      </v-row>\n                  </v-col>\n              </v-row>\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\">\n                  <v-col cols=\"6\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"2\" class=\"text-right grey--text\">\n                              글쓴이\n                          </v-col>\n                          <v-col>\n                              <v-text-field\n                                      label=\"글쓴이\"\n                                      type=\"text\"\n                                      color=\"secondary\"\n                                      v-model=\"vModel.data.writer\"\n                                      :rules=\"config.writerRules\"\n                                      required />\n                          </v-col>\n                      </v-row>\n                  </v-col>\n                  <v-col cols=\"6\" class=\"pt-0 pb-0\" v-if=\"vModel.data.type !== 'Video'\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"2\" class=\"text-right grey--text\">\n                              썸네일\n                          </v-col>\n                          <v-col v-if=\"!vModel.data.thumbnail_url || response.routeName === 'contentsRegister'\">\n                                  <v-file-input v-model=\"thumbnail_url\" label=\"파일 첨부\"></v-file-input>\n                          </v-col>\n                          <template v-else>\n                              <v-col cols=\"9\">\n                              <v-text-field\n                                      label=\"파일 첨부\"\n                                      type=\"text\"\n                                      color=\"secondary\"\n                                      v-model=\"vModel.data.thumbnail_url\"\n                                      disabled/>\n                              </v-col>\n                              <div @click=\"thumbnailClose()\" style=\"cursor: pointer;\">X</div>\n                          </template>\n                      </v-row>\n                  </v-col>\n              </v-row>\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\" v-if=\"vModel.data.type !== 'Video'\">\n                  <v-col cols=\"12\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"1\" class=\"text-right grey--text\">\n                              제목\n                          </v-col>\n                          <v-col>\n                              <v-text-field\n                                      label=\"제목\"\n                                      type=\"text\"\n                                      color=\"secondary\"\n                                      v-model=\"vModel.data.title\"\n                                      :rules=\"config.titleRules\"\n                                      required/>\n                          </v-col>\n                      </v-row>\n                  </v-col>\n              </v-row>\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\" v-if=\"vModel.data.type !== 'Video'\">\n                  <v-col cols=\"12\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"1\" class=\"text-right grey--text\">\n                              요약 내용\n                          </v-col>\n                          <v-col>\n                              <v-textarea\n                                      label=\"요약 내용\"\n                                      color=\"secondary\"\n                                      auto-grow\n                                      rows=\"1\"\n                                      row-height=\"5\"\n                                      no-resize\n                                      v-model=\"vModel.data.sub_title\"\n                                      :rules=\"config.subTitleRules\"\n                                      required />\n                          </v-col>\n                      </v-row>\n                  </v-col>\n              </v-row>\n              <v-row\n                      class=\"text-no-wrap\"\n                      align=\"center\" v-if=\"vModel.data.type === 'Video'\">\n                  <v-col cols=\"12\" class=\"pt-0 pb-0\">\n                      <v-row\n                              align=\"center\">\n                          <v-col cols=\"1\" class=\"text-right grey--text\">\n                              URL\n                          </v-col>\n                          <v-col>\n                              <v-text-field\n                                      label=\"URL 주소\"\n                                      type=\"text\"\n                                      color=\"secondary\"\n                                      v-model=\"vModel.data.contents\"\n                                      :rules=\"config.urlRules\"\n                                      required/>\n                          </v-col>\n                      </v-row>\n                  </v-col>\n              </v-row>\n            <v-row justify=\"space-around\" v-if=\"vModel.data.type !== 'Video'\">\n              <v-col cols=\"12\">\n                  <froala :tag=\"'textarea'\" :config=\"config2\" v-model=\"vModel.data.contents\"></froala>\n              </v-col>\n            </v-row>\n            <v-row justify=\"center\"\n                   class=\"mt-5\">\n              <v-btn\n                      color=\"default\"\n                      @click=\"beforePage()\">\n                취소\n              </v-btn>\n              <v-btn\n                      :disabled=\"!vModel.valid\"\n                      color=\"success\"\n                      @click=\"submitRegister(resultType)\">\n                {{resultType}}\n              </v-btn>\n            </v-row>\n          </v-form>\n        </v-card-text>\n      </base-material-card>\n      </v-col>\n    </v-row>\n    <base-material-snackbar\n      v-model=\"vModel.snackbar\"\n      :type=\"vModel.snackbarType\"\n      v-bind=\"{\n        'top': true,\n        'right': true\n      }\">\n      <span style=\"display:block;width:300px;margin:0;\">{{vModel.errorMessage}}</span>\n    </base-material-snackbar>\n  </v-container>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\n\nexport default {\n  created () {\n    this.refresh()\n  },\n  data () {\n    return {\n      config2: {\n        language: 'ko',\n        theme: 'gray',\n        height: 500,\n        toolbarStickyOffset: 55,\n        toolbarButtons: [\n          // 'fullscreen',\n          'bold',\n          'italic',\n          'underline',\n          'strikeThrough',\n          'subscript',\n          'superscript',\n          'fontFamily',\n          'paragraphFormat',\n          // 'fontSize',\n          '|',\n          'color',\n          'inlineStyle',\n          '|',\n          'align',\n          'formatOL',\n          'formatUL',\n          'outdent',\n          'indent',\n          '-',\n          'insertLink',\n          'insertImage',\n          'insertTable',\n          '|',\n          'quote',\n          'insertHR',\n          'undo',\n          'redo',\n          // 'clearFormatting',\n          'selectAll',\n          // 'html',\n        ],\n        events: {\n          'image.error': function (error, response) {\n            // Do something here.\n            // this is the editor instance.\n            this.snack('warning', '관리자에게 문의 바랍니다.')\n            console.log(error)\n          }\n        },\n        pluginsEnabled: null,\n        imageUploadParam: 'upload',\n        requestHeaders: {\n          Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('cdpUser')).accessToken\n        },\n        imageUploadURL: 'http://api-dev.redpp.co.kr/contents/file-upload',\n        imageUploadMethod: 'POST',\n        imageMaxSize: 5 * 1024 * 1024,\n        imageAllowedTypes: ['jpeg', 'jpg', 'png'],\n        imageManagerPreloader: '',\n        imageManagerPageSize: 20,\n        imageManagerScrollOffset: 10,\n        imageManagerLoadURL: '/froala_files.json',\n        imageManagerLoadMethod: 'GET',\n        imageManagerDeleteURL: '/froala_files/destroy',\n        imageManagerDeleteMethod: 'DELETE',\n      },\n      response: {\n        routeName: this.$route.name,\n        category: null,\n        category2: {},\n        contents: null,\n        partner: null,\n        register: null,\n        edit: null,\n        thumbnailVal: true,\n        image: [],\n      },\n      vModel: {\n        valid: true,\n        lineTap: 0,\n        snackbar: false,\n        snackbarType: 'warning',\n        errorMessage: null,\n        fresh: false,\n        created: this.$moment(new Date()).format('YYYY-MM-DD'),\n        data: {\n          title: null,\n          sub_title: null,\n          writer: null,\n          type: null,\n          category: null,\n          contents: null,\n          partner: null,\n          thumbnail_url: null,\n        },\n      },\n      thumbnail_url: null,\n      config: {\n        category1: [],\n        category2: [],\n        partner: [],\n        titleRules: [ v => !!v || '제목을 입력하세요.' ],\n        subTitleRules: [ v => !!v || '요약 내용을 입력하세요.' ],\n        writerRules: [ v => !!v || '글쓴이를 입력하세요.' ],\n        typeRules: [ v => !!v || '컨텐츠 종류를 선택하세요.' ],\n        categoryRules: [ v => !!v || '카테고리를 선택하세요.' ],\n        partnerRules: [ v => !!v || 'CP를 선택하세요.' ],\n        urlRules: [ v => !!v || 'url을 입력하세요.' ],\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['xhttp']),\n    snack (type, val) {\n      this.vModel.errorMessage = val\n      this.vModel.snackbarType = type\n      this.vModel.snackbar = true\n    },\n    beforePage () {\n      this.$router.go(-1)\n    },\n    refresh () {\n      this.getCategories()\n      this.getPartners()\n    },\n    changeType (val) {\n      this.vModel.data.category = null\n      this.config.category2 = this.response.category2[val]\n    },\n    thumbnailClose () {\n      this.vModel.data.thumbnail_url = null\n      this.response.thumbnailVal = true\n    },\n    ChangeimageTag (val) {\n      let img = document.querySelectorAll('.fr-img-space-wrap')\n      let caption = document.querySelectorAll('.fr-inner')\n      for (let i = 0; i < img.length; i++) {\n        var div = document.querySelectorAll('.fr-img-space-wrap')[i].outerHTML\n        var aaa = div.replace(/(<div)(.+?)(<\\s?\\/\\s?div>)/, '<figure$2</figure>')\n        document.querySelectorAll('.fr-img-space-wrap')[i].outerHTML = aaa\n      }\n      for (let i = 0; i < caption.length; i++) {\n        var div2 = document.querySelectorAll('.fr-inner')[i].outerHTML\n        var aaa2 = div2.replace(/(<span)(.+?)(<\\s?\\/\\s?span>)/, '<figcaption$2</figcaption>')\n        document.querySelectorAll('.fr-inner')[i].outerHTML = aaa2\n      }\n      var text = document.querySelector('.fr-element').innerHTML\n      this.vModel.data.contents = text\n      this.ContentsValidate(val)\n    },\n    getCategories () {\n      this.xhttp({\n        url: '/categories',\n        method: 'get',\n        params: null\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.category = response.data.data.categories\n          this.config.category1 = this.response.category.map(function ($value) {\n            return { value: $value.alias, text: $value.name }\n          })\n          this.config.category1 = this.config.category1.filter(function ($value) {\n            return $value.value !== 'Toon'\n          })\n          for (let i in this.response.category) {\n            this.response.category2[this.response.category[i].alias] = this.response.category[i].children.map(function ($value) {\n              return { value: $value.id, text: $value.name }\n            })\n          }\n          if (this.response.routeName === 'contentsEdit') {\n            this.getContents()\n          }\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    getContents () {\n      this.xhttp({\n        url: '/contents/' + this.$route.params.contents_id + '/edit',\n        method: 'get',\n        params: null\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.contents = response.data.data.contents\n          this.vModel.data = this.response.contents\n          this.config.category2 = this.response.category2[this.vModel.data.type]\n          if (this.vModel.data.thumbnail_url) {\n            this.response.thumbnailVal = false\n          }\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    getPartners () {\n      let send = {\n        orderby: 'created',\n        direction: 'desc'\n      }\n      this.xhttp({\n        url: '/partners',\n        method: 'get',\n        params: send\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.partner = response.data.data.partners[0].key\n          /* this.config.partner = this.response.partner.partners.map(function ($value) {\n            return { value: $value.key, text: $value.name }\n          }) */\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    submitRegister (val) {\n      if (this.$refs.form.validate()) {\n        let message = '등록 하시겠습니까?'\n        if (val === '수정') {\n          message = '수정 하시겠습니까?'\n        }\n        if (confirm(message)) {\n          this.ChangeimageTag(val)\n          // this.replaceImageTags(val)\n        }\n      }\n    },\n    async replaceImageTags (val) {\n      const target = document.querySelectorAll('figure>img')\n      const array = []\n      const willChangeTarget = []\n\n      target.forEach(v => {\n        if (v.getAttribute('src') && v.getAttribute('src').match(/base64/)) {\n          array.push(v.getAttribute('src'))\n          // @ts-ignore\n          willChangeTarget.push(v)\n        }\n      })\n\n      if (array.length > 0) {\n        const data = new FormData()\n        for (let i = 0; i < array.length; i++) {\n          const dataForSend = this.convertImage(array[i], `image${i}`)\n          data.set('upload', dataForSend)\n          await this.xhttp({\n            url: '/contents/file-upload',\n            method: 'post',\n            data: data\n          }).then((response) => {\n            if (response.status === 200) {\n              this.response.image[i] = response.data.data.data\n              willChangeTarget[i].setAttribute('src', response.data.data.data)\n              if (val === '등록') {\n                const wrapper = document.createElement('div')\n                wrapper.innerHTML = this.vModel.data.contents\n                wrapper.querySelectorAll('figure>img')[i].setAttribute('src', response.data.data.data)\n                this.vModel.data.contents = wrapper.innerHTML\n              }\n              if (i === array.length - 1) {\n                this.ContentsValidate(val)\n              }\n            }\n          }).catch((error) => {\n            if (error.message === 'Request failed with status code 401') {\n              this.$router.push({ 'name': 'UserLogin' })\n            } else {\n              this.snack('warning', '관리자에게 문의 바랍니다.')\n            }\n          })\n        }\n      } else {\n        this.ContentsValidate(val)\n      }\n    },\n    convertImage (dataUrl, filename) {\n      let arr = dataUrl.split(',')\n      let mime = arr[0].match(/:(.*?);/)[1]\n      let bstr = atob(arr[1])\n      let n = bstr.length\n      let u8arr = new Uint8Array(n)\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n)\n      }\n      return new File([u8arr], filename, { type: mime })\n    },\n    ContentsValidate (val) {\n      if (this.vModel.data.type === 'Video') {\n        if (val === '등록') {\n          this.putContents()\n        } else {\n          this.contentsEdit()\n        }\n      } else {\n        if (this.vModel.data.contents) {\n          if (val === '등록') {\n            this.putContents()\n          } else {\n            this.contentsEdit()\n          }\n        } else {\n          this.snack('warning', '내용을 입력하세요.')\n        }\n      }\n    },\n    putContents () {\n      let send = this.vModel.data\n      this.xhttp({\n        url: '/contents/' + this.response.partner + '/create',\n        method: 'post',\n        data: send\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.register = response.data.data\n          this.snack('success', '컨텐츠 등록이 완료되었습니다.')\n          this.$router.push({ name: 'contentsList' })\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    contentsEdit () {\n      for (let i = 0; i < this.response.image.length; i++) {\n        const wrapper = document.createElement('div')\n        wrapper.innerHTML = this.vModel.data.contents\n        let img = wrapper.querySelectorAll('figure>img')\n        for (let j = 0; j < img.length; j++) {\n          if (img[j].getAttribute('src').slice(0, 4) === 'data') {\n            wrapper.querySelectorAll('figure>img')[j].setAttribute('src', this.response.image[i])\n            this.vModel.data.contents = wrapper.innerHTML\n          }\n        }\n      }\n      let send = this.vModel.data\n      send.partner = this.response.partner\n      this.xhttp({\n        url: 'contents/' + this.response.partner + '/update/' + this.$route.params.contents_id,\n        method: 'put',\n        data: send\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.edit = response.data.data\n          this.snack('success', '수정 완료되었습니다.')\n          this.beforePage()\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    thumbnailFile () {\n      let formData = new FormData()\n      formData.append('upload', this.thumbnail_url)\n      this.xhttp({\n        url: '/contents/file-upload',\n        method: 'post',\n        data: formData\n      }).then((response) => {\n        if (response.status === 200) {\n          this.vModel.data.thumbnail_url = response.data.link\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n  },\n  computed: {\n    resultType () {\n      if (this.response.routeName === 'contentsEdit') {\n        return '수정'\n      } else {\n        return '등록'\n      }\n    }\n  },\n  watch: {\n    thumbnail_url: function (val) {\n      if (val) {\n        this.thumbnailFile()\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n    .v-application p {\n        margin-bottom: 10px;\n    }\n</style>\n"],"sourceRoot":"src/views/contents"}]}