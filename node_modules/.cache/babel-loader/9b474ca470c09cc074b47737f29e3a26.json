{"remainingRequest":"/Users/hypark/project/cdp-admin/node_modules/babel-loader/lib/index.js!/Users/hypark/project/cdp-admin/node_modules/vuetify-loader/lib/loader.js!/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hypark/project/cdp-admin/src/views/feed/Adin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hypark/project/cdp-admin/src/views/feed/Adin.vue","mtime":1580691291944},{"path":"/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js","mtime":1573115876135},{"path":"/Users/hypark/project/cdp-admin/node_modules/babel-loader/lib/index.js","mtime":1573115869688},{"path":"/Users/hypark/project/cdp-admin/node_modules/vuetify-loader/lib/loader.js","mtime":1573794163850},{"path":"/Users/hypark/project/cdp-admin/node_modules/cache-loader/dist/cjs.js","mtime":1573115876135},{"path":"/Users/hypark/project/cdp-admin/node_modules/vue-loader/lib/index.js","mtime":1573437292219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Adin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container\n          id=\"adIn\"\n          fluid\n          tag=\"section\">\n    <v-row\n            align=\"center\"\n            justify=\"center\">\n      <v-col cols=\"12\">\n        <base-material-card\n                color=\"green\">\n          <template v-slot:heading>\n            <h1 class=\"display-2 font-weight-regular\">\n              컨텐츠 내부 광고\n            </h1>\n          </template>\n          <v-card-text>\n            <v-row justify=\"space-between\" align=\"center\">\n              <v-col cols=\"2\">\n                <v-select\n                        :items=\"config.mediaOptions\"\n                        v-model=\"vModel.media\"\n                        label=\"매체를 선택해주세요.\"\n                        color=\"secondary\"\n                        @change=\"mediaChange()\" />\n              </v-col>\n              <v-btn :disabled=\"!vModel.media\"\n                     color=\"warning\"\n                     @click=\"adsCreate\">\n                등록\n              </v-btn>\n            </v-row>\n            <v-row justify=\"space-between\">\n              <template v-if=\"resultList\">\n                <template v-if=\"resultList.length > 0\">\n                  <v-col cols=\"6\">\n                    <draggable\n                            class=\"list-group pl-0\"\n                            tag=\"ul\"\n                            v-model=\"response.list.data\"\n                            v-bind=\"config.dragOptions\"\n                            @start=\"drag = true\"\n                            @end=\"drag = false\">\n                      <transition-group type=\"transition\">\n                        <li class=\"list-group-item mb-2 pa-3\"\n                            style=\"list-style: none;background:#fff;border:1px solid #ddd;border-radius: 5px;cursor: move;\"\n                            v-for=\"(item) in response.list.data\"\n                            :key=\"item.key\"\n                            @click=\"listClick(item.key)\">\n                          {{item.title}}\n                          <v-icon style=\"cursor:pointer;position:relative;z-index:5;\" @click=\"listClose(item.key)\">mdi-close-circle</v-icon>\n                          <v-icon style=\"float:right;cursor:pointer;\">mdi-chevron-right</v-icon>\n                        </li>\n                      </transition-group>\n                    </draggable>\n                    <div class=\"text-center mt-5\">\n                      <v-btn color=\"warning\"\n                             @click=\"listEdit\">\n                        순서 저장\n                      </v-btn>\n                    </div>\n                  </v-col>\n                  <v-col cols=\"6\">\n                    <v-form\n                            v-model=\"vModel.valid\"\n                            ref=\"form\">\n                      <v-text-field\n                              label=\"제목\"\n                              type=\"text\"\n                              color=\"secondary\"\n                              v-model=\"vModel.title\"\n                              :rules=\"config.titleRules\"\n                              required />\n                      <v-textarea\n                              label=\"코드\"\n                              color=\"secondary\"\n                              auto-grow\n                              rows=\"1\"\n                              row-height=\"5\"\n                              no-resize\n                              v-model=\"vModel.code\"\n                              :rules=\"config.codeRules\"\n                              required />\n                    </v-form>\n                    <div class=\"text-center\" v-if=\"resultList\">\n                      <v-btn :disabled=\"!vModel.valid\"\n                             color=\"warning\"\n                             v-if=\"resultList.length > 0\"\n                             @click=\"adsEdit()\">\n                        수정\n                      </v-btn>\n                      <v-btn :disabled=\"!vModel.valid\"\n                             color=\"warning\"\n                             v-if=\"resultList.length === 0\"\n                             @click=\"adsCreate()\">\n                        등록\n                      </v-btn>\n                    </div>\n                  </v-col>\n                </template>\n                <v-col v-else>\n                  <p>리스트가 없습니다.</p>\n                </v-col>\n              </template>\n            </v-row>\n          </v-card-text>\n        </base-material-card>\n      </v-col>\n    </v-row>\n    <base-material-snackbar\n            v-model=\"vModel.snackbar\"\n            :type=\"vModel.snackbarType\"\n            v-bind=\"{\n        'top': true,\n        'right': true\n      }\">\n      <span style=\"display:block;width:300px;margin:0;\">{{vModel.errorMessage}}</span>\n    </base-material-snackbar>\n  </v-container>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport draggable from 'vuedraggable'\n\nexport default {\n  components: {\n    draggable,\n  },\n  created () {\n    this.mediaList()\n    this.adsList()\n  },\n  data () {\n    return {\n      response: {\n        media: null,\n        create: null,\n        edit: null,\n        listEdit: null,\n        listDelete: null,\n        list: [],\n      },\n      vModel: {\n        snackbar: false,\n        snackbarType: 'warning',\n        errorMessage: null,\n        listOpen: null,\n        valid: true,\n        title: '',\n        code: '',\n      },\n      config: {\n        dragOptions: {\n          animation: 200,\n          group: 'description',\n          disabled: false,\n          ghostClass: 'ghost'\n        },\n        mediaOptions: [],\n        titleRules: [ v => !!v || '제목을 입력하세요.' ],\n        codeRules: [ v => !!v || '코드를 입력하세요.' ],\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['xhttp']),\n    snack (type, val) {\n      this.vModel.errorMessage = val\n      this.vModel.snackbarType = type\n      this.vModel.snackbar = true\n    },\n    listClick (val) {\n      let list = this.response.list.data.filter(function ($value) {\n        return $value.key === val\n      })\n      this.vModel.listOpen = val\n      this.vModel.title = list[0].title\n      this.vModel.code = list[0].code\n    },\n    listClose (val) {\n      if (this.response.list.data.length > 1) {\n        let list = this.response.list.data.filter(function ($value) {\n          return $value.key !== val\n        })\n        this.response.list.data = list\n      }\n      this.xhttp({\n        url: '/' + this.vModel.media + '/inside/' + val,\n        method: 'delete',\n        data: null\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.listDelete = response.data.data\n          this.adsList()\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    listEdit () {\n      let data = this.response.list.data\n      let key = data.map(function ($value) {\n        return { key: $value.key }\n      })\n      let send = {\n        inside: key\n      }\n      this.xhttp({\n        url: '/' + this.vModel.media + '/inside-rank',\n        method: 'put',\n        data: send\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.listEdit = response.data.data\n          this.snack('success', '순서 수정 완료되었습니다.')\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    adsEdit () {\n      if (this.$refs.form.validate()) {\n        if (confirm('수정 하시겠습니까?')) {\n          let send = {\n            title: this.vModel.title,\n            code: this.vModel.code\n          }\n          this.xhttp({\n            url: '/' + this.vModel.media + '/inside/' + this.vModel.listOpen,\n            method: 'put',\n            data: send\n          }).then((response) => {\n            if (response.status === 200) {\n              this.response.listEdit = response.data.data\n              this.snack('success', '수정 완료되었습니다.')\n              this.adsList()\n            }\n          }).catch((error) => {\n            if (error.message === 'Request failed with status code 401') {\n              this.$router.push({ 'name': 'UserLogin' })\n            } else {\n              this.snack('warning', '관리자에게 문의 바랍니다.')\n            }\n          })\n        }\n      }\n    },\n    adsCreate () {\n      this.$router.push({ 'name': 'feedAdinRegister', params: { media_id: this.vModel.media } })\n    },\n    mediaChange () {\n      this.vModel.title = ''\n      this.vModel.code = ''\n      this.response.list = null\n      if (this.vModel.media) {\n        this.$router.push({ 'name': 'feedAdin', query: { media: this.vModel.media } })\n        this.adsList()\n      }\n    },\n    mediaList () {\n      let send = {\n        orderby: 'created',\n        direction: 'desc'\n      }\n      this.xhttp({\n        url: '/media',\n        method: 'get',\n        params: send\n      }).then((response) => {\n        if (response.status === 200) {\n          this.response.media = response.data.data.media\n          this.config.mediaOptions = this.response.media.map(function ($value) {\n            return { value: $value.key, text: $value.name }\n          })\n          this.config.mediaOptions.unshift({ value: '', text: '매체 선택' })\n        }\n      }).catch((error) => {\n        if (error.message === 'Request failed with status code 401') {\n          this.$router.push({ 'name': 'UserLogin' })\n        } else {\n          this.snack('warning', '관리자에게 문의 바랍니다.')\n        }\n      })\n    },\n    adsList () {\n      if (this.$route.query.media) {\n        this.vModel.media = this.$route.query.media\n        this.xhttp({\n          url: '/' + this.vModel.media + '/inside',\n          method: 'get',\n          params: null\n        }).then((response) => {\n          if (response.status === 200) {\n            this.response.list = response.data.data\n          }\n        }).catch((error) => {\n          if (error.message === 'Request failed with status code 401') {\n            this.$router.push({ 'name': 'UserLogin' })\n          } else {\n            this.snack('warning', '관리자에게 문의 바랍니다.')\n          }\n        })\n      }\n    },\n  },\n  computed: {\n    resultList () {\n      if (this.response.list) {\n        return this.response.list.data\n      } else {\n        return false\n      }\n    },\n  },\n}\n</script>\n\n<style>\n  #outAds .flip-list-move {\n    transition: transform 0.5s;\n  }\n  #outAds .no-move {\n    transition: transform 0s;\n  }\n  #outAds .ghost {\n    opacity: 0.5;\n    background: #c8ebfb;\n  }\n</style>\n"],"sourceRoot":"src/views/feed"}]}